<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>杂记</title>
  
  <subtitle>Keep It Simple &amp; Stupid.</subtitle>
  <link href="https://bsdcpp.github.io/atom.xml" rel="self"/>
  
  <link href="https://bsdcpp.github.io/"/>
  <updated>2021-03-16T01:46:13.687Z</updated>
  <id>https://bsdcpp.github.io/</id>
  
  <author>
    <name>Ginger</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python环境配置</title>
    <link href="https://bsdcpp.github.io/2021/03/16/Python%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    <id>https://bsdcpp.github.io/2021/03/16/Python%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</id>
    <published>2021-03-16T01:41:48.000Z</published>
    <updated>2021-03-16T01:46:13.687Z</updated>
    
    <content type="html"><![CDATA[<h3 id="python环境配置"><a href="#python环境配置" class="headerlink" title="python环境配置"></a>python环境配置</h3><p>一个系统多个python版本的管理，日常使用如何做到不污染系统python。</p><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> LDFLAGS=<span class="string">&quot;-L/usr/local/opt/bzip2/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/sqlite/lib&quot;</span></span><br><span class="line"><span class="built_in">export</span> CPPFLAGS=<span class="string">&quot;-I/usr/local/opt/bzip2/include -I/usr/local/opt/zlib/include -I/usr/local/opt/sqlite/include&quot;</span></span><br><span class="line"><span class="built_in">export</span> PYTHON_CONFIGURE_OPTS=<span class="string">&quot;--enable-framework&quot;</span></span><br><span class="line">linux用：env PYTHON_CONFIGURE_OPTS=<span class="string">&quot;--enable-shared&quot;</span> pyenv install</span><br><span class="line"></span><br><span class="line">pyenv install 3.8.6</span><br><span class="line">⚠️注意一个问题：/private/tmp的权限问题，可以sudo chown一下。</span><br></pre></td></tr></table></figure><p>更多配置教程：<br><a href="https://opensource.com/article/19/6/python-virtual-environments-mac">https://opensource.com/article/19/6/python-virtual-environments-mac</a><br><a href="https://opensource.com/article/20/4/pyenv">https://opensource.com/article/20/4/pyenv</a><br><a href="https://opensource.com/article/19/5/python-3-default-mac">https://opensource.com/article/19/5/python-3-default-mac</a></p><h4 id="python-virtual"><a href="#python-virtual" class="headerlink" title="python virtual"></a>python virtual</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$ pyenv global 3.7.3</span><br><span class="line">$ $(pyenv <span class="built_in">which</span> python) -m pip install virtualenvwrapper</span><br><span class="line"></span><br><span class="line">$ mkvirtualenv test1</span><br><span class="line">$ mkvirtualenv test2</span><br><span class="line"></span><br><span class="line">$ mkdir -p ~/src/pyfun &amp;&amp; <span class="built_in">cd</span> ~/src/pyfun</span><br><span class="line">$ mkvirtualenv $(basename $(<span class="built_in">pwd</span>))</span><br><span class="line"><span class="comment"># we will see the environment initialize</span></span><br><span class="line">(pyfun)$ workon</span><br><span class="line">pyfun</span><br><span class="line">test1</span><br><span class="line">test2</span><br><span class="line">(pyfun)$ deactivate</span><br><span class="line">$</span><br><span class="line">$ <span class="built_in">cd</span> ~/src/pyfun</span><br><span class="line">(pyfun)$ workon .</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">cd</span> ~/src/pyfun</span><br><span class="line">$ rmvirtualenv $(basename $(<span class="built_in">pwd</span>))</span><br><span class="line">$ mkvirtualenv $(basename $(<span class="built_in">pwd</span>))</span><br></pre></td></tr></table></figure><h6 id="创建虚拟环境"><a href="#创建虚拟环境" class="headerlink" title="创建虚拟环境"></a>创建虚拟环境</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyenv virtualenv 2.7.15 env-name</span><br></pre></td></tr></table></figure><p>若不指定 python 版本，会默认使用当前环境 python 版本。如果指定 Python 版本，则一定要是已经安装过的版本，否则会出错。环境的真实目录位于 <code>~/.pyenv/versions</code> 下</p><h5 id="列出当前虚拟环境"><a href="#列出当前虚拟环境" class="headerlink" title="列出当前虚拟环境"></a>列出当前虚拟环境</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pyenv virtualenvs</span><br><span class="line">pyenv activate env-name  # 激活虚拟环境</span><br><span class="line">pyenv deactivate #退出虚拟环境，回到系统环境</span><br></pre></td></tr></table></figure><h5 id="删除虚拟环境"><a href="#删除虚拟环境" class="headerlink" title="删除虚拟环境"></a>删除虚拟环境</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pyenv uninstall env-name</span><br><span class="line">rm -rf ~&#x2F;.pyenv&#x2F;versions&#x2F;env-name  # 或者删除其真实目录</span><br></pre></td></tr></table></figure><p>使用 pyenv 来管理 python，使用 pyenv-virtualenv 插件来管理多版本 python 包。此时，还需注意，当我们将项目运行的 env 环境部署到生产环境时，由于我们的 python 包是依赖 python 的，需要注意生产环境的 python 版本问题。</p><h5 id="所有命令"><a href="#所有命令" class="headerlink" title="所有命令"></a>所有命令</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">$ pyenv commands</span><br><span class="line">activate</span><br><span class="line">commands</span><br><span class="line">completions</span><br><span class="line">deactivate</span><br><span class="line">doctor</span><br><span class="line"><span class="built_in">exec</span></span><br><span class="line">global</span><br><span class="line"><span class="built_in">help</span></span><br><span class="line">hooks</span><br><span class="line">init</span><br><span class="line">install</span><br><span class="line">installer</span><br><span class="line"><span class="built_in">local</span></span><br><span class="line">offline-installer</span><br><span class="line">prefix</span><br><span class="line"><span class="built_in">rehash</span></span><br><span class="line">root</span><br><span class="line">shell</span><br><span class="line">shims</span><br><span class="line">uninstall</span><br><span class="line">update                 <span class="comment"># 更新 pyenv 及插件</span></span><br><span class="line">version</span><br><span class="line">--version</span><br><span class="line">version-file</span><br><span class="line">version-file-read</span><br><span class="line">version-file-write</span><br><span class="line">version-name</span><br><span class="line">version-origin</span><br><span class="line">versions</span><br><span class="line">virtualenv</span><br><span class="line">virtualenv-delete</span><br><span class="line">virtualenv-init</span><br><span class="line">virtualenv-prefix</span><br><span class="line">virtualenvs</span><br><span class="line"><span class="built_in">whence</span></span><br><span class="line"><span class="built_in">which</span></span><br></pre></td></tr></table></figure><p><a href="http://einverne.github.io/post/2017/04/pyenv.html">http://einverne.github.io/post/2017/04/pyenv.html</a></p><h3 id="MacVim安装于配置"><a href="#MacVim安装于配置" class="headerlink" title="MacVim安装于配置"></a>MacVim安装于配置</h3><p>Brew cask编译好的macvim依赖于brew的<a href="mailto:&#112;&#x79;&#x74;&#x68;&#111;&#110;&#x40;&#x33;&#x2e;&#x39;">&#112;&#x79;&#x74;&#x68;&#111;&#110;&#x40;&#x33;&#x2e;&#x39;</a>，所以需要修改编译参数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ brew tap macvim-dev/macvim</span><br><span class="line">$ brew edit macvim-dev/macvim/macvim</span><br></pre></td></tr></table></figure><p>需要把配置文件里依赖python3的路径修改为你pyenv的路径：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ENV.append &#x27;vi_cv_path_python3&#x27;, &quot;#&#123;HOMEBREW_PREFIX&#125;/bin/python3&quot;</span></span><br><span class="line"><span class="comment"># ENV.append &#x27;vi_cv_dll_name_python3&#x27;, &quot;#&#123;HOMEBREW_PREFIX&#125;/Frameworks/Python.framework/Versions/3.5/Python&quot;</span></span><br><span class="line"></span><br><span class="line">ENV.append <span class="string">&#x27;vi_cv_path_python3&#x27;</span>, <span class="string">&quot;/users/&lt;user name&gt;/. Pyenv/Versions/3.5.1/Bin/Python3&quot;</span></span><br><span class="line">ENV.append <span class="string">&#x27;vi_cv_dll_name_python3&#x27;</span>, <span class="string">&quot;/users/&lt;user name&gt;/. pyenv/versions/3.5.1/lib/libpython3.5m.dylib&quot;</span></span><br></pre></td></tr></table></figure><p>然后安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install --HEAD --with-properly-linked-python2-python3 macvim-dev/macvim/macvim</span><br></pre></td></tr></table></figure><p>⚠️最近big sur编译的时候有bug，导致make失败 <a href="https://github.com/macvim-dev/homebrew-macvim/issues/16">https://github.com/macvim-dev/homebrew-macvim/issues/16</a></p><p>可以brew edit的时候修改system ‘make’为system ‘sleep 120’，趁它休息的时候手动去目录make（手动可以成功），然后在brew跳过了make就成功了。               </p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;python环境配置&quot;&gt;&lt;a href=&quot;#python环境配置&quot; class=&quot;headerlink&quot; title=&quot;python环境配置&quot;&gt;&lt;/a&gt;python环境配置&lt;/h3&gt;&lt;p&gt;一个系统多个python版本的管理，日常使用如何做到不污染系统python。&lt;/p&gt;</summary>
    
    
    
    <category term="python" scheme="https://bsdcpp.github.io/categories/python/"/>
    
    
  </entry>
  
  <entry>
    <title>chroot下玩转群晖虚拟机</title>
    <link href="https://bsdcpp.github.io/2021/03/11/chroot%E4%B8%8B%E7%8E%A9%E8%BD%AC%E7%BE%A4%E6%99%96%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    <id>https://bsdcpp.github.io/2021/03/11/chroot%E4%B8%8B%E7%8E%A9%E8%BD%AC%E7%BE%A4%E6%99%96%E8%99%9A%E6%8B%9F%E6%9C%BA/</id>
    <published>2021-03-11T09:59:32.000Z</published>
    <updated>2021-03-16T01:46:59.038Z</updated>
    
    <content type="html"><![CDATA[<h4 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h4><p>​        仅需要实现软路由的朋友请移步<a href="https://koolshare.cn/thread-76860-1-1.html">《群晖官方套件VirtualDSM实现LEDE X64软路由》</a> ，有更简单的方法。下面主要讲的chroot环境下的折腾方法，一般作为学习用就可以了，同志们，折腾的过程是痛并快乐的，昨晚破天荒10点半睡觉，感觉整个人都活过来了。所以身体还是最重要的。<br>​        在实现LEDE软路由过程中会发现网络无法访问问题，后来经过反复折腾，NAS硬重启N次后，发现chroot里设置的网络，一旦网线插拔变动，网络设置又会让群晖主系统更改，甚至导致群晖无法访问，需要长按关机才能恢复（今天得知其实可以通过群晖的pc端软件synology assistant来重制网络，我图样了）。<br>​    <a id="more"></a><br>​        通篇以群晖916+ 8G版为例，应该也适用其他x86平台的。<br>​        首先你的NAS要是x86的cpu平台，否则没有<a href="https://zh.wikipedia.org/zh-hans/%E5%9F%BA%E4%BA%8E%E5%86%85%E6%A0%B8%E7%9A%84%E8%99%9A%E6%8B%9F%E6%9C%BA">KVM</a>支持，性能捉急。</p><img src="/2021/03/11/chroot%E4%B8%8B%E7%8E%A9%E8%BD%AC%E7%BE%A4%E6%99%96%E8%99%9A%E6%8B%9F%E6%9C%BA/forum.php" class="" title="img"><p>先到群晖管理界面，打开SSH。命令行操作请谨慎，请在知道命令含义的前提下执行，谨慎操作。<br>ssh到群晖上，查看内核模块，有两个地方都有，应该是同一个东西。</p><blockquote><p>ls -l /lib/modules/kvm*<br>或者<br>ls -l /usr/lib/modules/kvm*<br>有的话执行<br>sudo insmod /lib/modules/kvm.ko<br>sudo insmod /lib/modules/kvm-intel.ko</p></blockquote><p>kvm-intel.ko，和kvm.ko都存在的话，恭喜你，可以入坑折腾了。<br>由于群晖自带的linux系统缺乏相关软件，自己编译安装相当麻烦。不过可以借助套件中心里的debian-chroot来完成。大家可以参考这个图文并茂的文章<a href="http://tieba.baidu.com/p/3257838822%E3%80%82%E6%88%91%E5%AE%9E%E5%9C%A8%E6%B2%A1%E6%9C%89%E8%BF%99%E4%B8%AA%E7%B2%BE%E5%8A%9B%E5%8E%BB%E6%88%AA%E5%9B%BE%E5%86%99%E4%BA%86%EF%BC%8C%E6%8A%B1%E6%AD%89%E3%80%82">http://tieba.baidu.com/p/3257838822。我实在没有这个精力去截图写了，抱歉。</a></p><blockquote><p>  1.打开套件中心，新增“来源”：<a href="http://packages.synocommunity.com/">http://packages.synocommunity.com/</a><br>  2.到“社群”标签中找到debian-chroot安装</p></blockquote><p>​    关于chroot，自己科普吧。总之相当于另外开辟了一个类似“容器”的地方，共享主机的内核和硬件资源，但是“系统盘”里的文件都是新的。<br>这个自带的debian-chroot还可以用，我之前试过，后来我用vp$的debian自建了一个chroot，里面软件都是比较新的，用到了qemu的2.7版本。<br>然后就进入了类似vp$一样的debian系统了，自己配置源，执行如下命令安装qemu-kvm:</p><blockquote><p>sudo apt-get install qemu-kvm libvirt-bin bridge-utils uml-utilities</p></blockquote><p>到了这里其实已经可以开始通过直接执行命令行的qemu-system-x86_64来安装和开启系统了。我一开始是粗暴的做法：</p><blockquote><p>DISKIMG=./win7.img<br>SLIC=./Sony[Sony-VAIO-Sony]2.1.BIN<br>WIN7IMG=./cn_windows_7_ultimate_with_sp1_x64_dvd_u_677408.iso<br>VIRTIMG=./virtio-win-0.1.126.iso</p><p>qemu-img create -f qcow2 ${DISKIMG} 50G</p><p>qemu-system-x86_64 -acpitable file=${SLIC} <br>-daemonize <br>-usbdevice tablet -cpu host -m 2048 –enable-kvm <br>-drive file=${DISKIMG},if=virtio,cache=writeback <br>-cdrom ${WIN7IMG} <br>-drive file=${VIRTIMG},index=3,media=cdrom <br>-rtc base=localtime,clock=host -smp cores=2,threads=1 <br>-net nic,model=virtio,vlan=0,macaddr=52-54-00-12-34-01 <br>-net tap,vlan=0,ifname=tap1,script=no <br>-boot c -soundhw es1370 <br>-vga qxl -device virtio-serial-pci <br>-chardev spicevmc,id=spicechannel0,name=vdagent <br>-vnc :1</p></blockquote><p>是不是看得头大，不管你怎么想，我就是这么折腾过来的。后面利用libvirt来高效管理各种虚拟机，还是蛮方便的。</p><p>本节要做的是有个概念即可，装好debian-chroot即可。我们用最简单的方法来管理。</p><h4 id="chroot篇"><a href="#chroot篇" class="headerlink" title="chroot篇"></a>chroot篇</h4><p>这里是记录安装新chroot文件系统的教程。参照这篇<a href="https://wiki.debian.org/chroot">https://wiki.debian.org/chroot</a><br>操作以debian为例。</p><ul><li><p>参照</p><p><a href="https://wiki.debian.org/chroot">https://wiki.debian.org/chroot</a></p><p>（只需要执行前面2个命令即可）</p><blockquote><p>apt-get install binutils debootstrap<br>mkdir -p /srv/chroot/chroottarget<br>debootstrap testing /srv/chroot/chroottarget <a href="http://httpredir.debian.org/debian">http://httpredir.debian.org/debian</a></p></blockquote></li><li><p>然后执行打包:</p><blockquote><p>tar jpcf chroottarget.tar.bz2 /srv/chroot/chroottarget（主要加-p保留原来权限）</p></blockquote></li><li><p>拷贝到群晖本地，ssh到群晖上面，备份原来的</p><blockquote><p>mv /volume*/@appstore/debian-chroot/var/chroottarget/  /volume*/@appstore/debian-chroot/var/chroottarget.bak 这里的*代表你安装套件的时候选择的磁盘位置，如volume3，下同。</p></blockquote><p>然后执行</p><blockquote><p>tar jxpf chroottarget.tar.bz2 -C /volume*/@appstore/debian-chroot/var/</p></blockquote></li><li><p>然后参照<a href="https://markpith.wordpress.com/2015/10/26/debian-chroot-on-synology-nas/%C3%A8%C2%BF%C2%9B">https://markpith.wordpress.com/2015/10/26/debian-chroot-on-synology-nas/</a>进行优化chroot系统</p></li></ul><blockquote><p>sudo /var/packages/debian-chroot/scripts/start-stop-status chroot  进入chroot系统，这里就是一个完整的debian testing文件系统。</p></blockquote><p>   接下来的操作都在chroot里做，熟悉debian的同学就轻车熟路了。<br>   编辑/etc/apt/sources.list</p><blockquote><p>###### Debian Main Repos<br>deb <a href="http://ftp.us.debian.org/debian/">http://ftp.us.debian.org/debian/</a> stretch main contrib non-free<br>deb-src <a href="http://ftp.us.debian.org/debian/">http://ftp.us.debian.org/debian/</a> stretch main contrib non-free</p><p>###### Debian Update Repos<br>deb <a href="http://security.debian.org/">http://security.debian.org/</a> stretch/updates main contrib non-free<br>deb <a href="http://ftp.us.debian.org/debian/">http://ftp.us.debian.org/debian/</a> stretch-proposed-updates main contrib non-free<br>deb-src <a href="http://security.debian.org/">http://security.debian.org/</a> stretch/updates main contrib non-free<br>deb-src <a href="http://ftp.us.debian.org/debian/">http://ftp.us.debian.org/debian/</a> stretch-proposed-updates main contrib non-free</p></blockquote><p>  然后执行</p><blockquote><p>更新源，更新系统默认编码和时区：<br>apt-get update<br>apt-get upgrade</p><p>apt-get install locales<br>dpkg-reconfigure locales<br>dpkg-reconfigure tzdata<br>创建一个和群晖自带系统一样的用户名，这样可以共享同一个home目录，先切到群晖系统下（可以多开几个窗口），查看用户uid,gid<br>id -u username （username改成你自己的）<br>id -g username<br>回到chroot，执行<br>adduser username –uid XXXX –gid YYYY –home /home/username （这里的username和XXXX,YYYY自己替换）</p><p>好了后<br>apt-get install sudo<br>adduser username sudo<br>为了更方便进入chroot系统，安装ssh<br>apt-get install ssh<br>修改/etc/ssh/sshd_config 文件，可以配置端口，时间关系，这里不多介绍。</p></blockquote><p>  回到群晖系统，修改套件的启动脚本，加入home挂载，cgroup挂载（libvirt要用到）</p><blockquote><p>我在/var/packages/debian-chroot/scripts/start-stop-status文件中新增如下</p></blockquote><blockquote><p>start_daemon函数中加挂载，和起ssh服务<br>grep -q “${CHROOTTARGET}/sys/fs/cgroup “ /proc/mounts || mount –rbind /sys/fs/cgroup ${CHROOTTARGET}/sys/fs/cgroup<br>grep -q “${CHROOTTARGET}/home “ <code>realpath /var/services/homes</code> || mount -o bind <code>realpath /var/services/homes</code> ${CHROOTTARGET}/home</p><p>chroot ${CHROOTTARGET} /etc/init.d/ssh start</p><p>stop_daemon函数中加卸载，停ssh服务<br>chroot ${CHROOTTARGET} /etc/init.d/ssh stop<br>umount ${CHROOTTARGET}/home<br>umount -R ${CHROOTTARGET}/sys/fs/cgroup</p></blockquote><p>好了，手工了，重启下debian-chroot套件</p><blockquote><p>/var/packages/debian-chroot/scripts/start-stop-status stop<br>/var/packages/debian-chroot/scripts/start-stop-status start  没有restart，奇怪了</p></blockquote><p>接下来干正事了：</p><blockquote><p>安装qemu，kvm</p><p>sudo apt-get install qemu-kvm libvirt-daemon-system libvirt-clients libvirt-daemon bridge-utils uml-utilities</p></blockquote><p>完工，看下一节。</p><h4 id="libvirt篇"><a href="#libvirt篇" class="headerlink" title="libvirt篇"></a>libvirt篇</h4><img src="/2021/03/11/chroot%E4%B8%8B%E7%8E%A9%E8%BD%AC%E7%BE%A4%E6%99%96%E8%99%9A%E6%8B%9F%E6%9C%BA/forum-20210311181105592.php" class="" title="img"><p>首先进入chroot系统，执行</p><blockquote><p>/etc/init.d/dbus start<br>/etc/init.d/libvirtd start<br>/etc/init.d/virtlogd start</p></blockquote><p>启动几个必须的服务，你可以加入到脚本。</p><blockquote><p>brctl addbr br-lan<br>brctl addif br-lan eth0/1</p></blockquote><p>创建虚拟网桥</p><p>接下来可以安装虚拟机喽，以安装debian为例：</p><blockquote><p>virt-install –virt-type kvm –network bridge=br-lan –cpu host –vcpus 1 –name jessie-amd64 –memory 512 –cdrom ./debian-8.6.0-amd64-netinst.iso –disk size=4 –os-variant generic –graphics vnc,port=5900</p></blockquote><p>此时可以通过vnc工具，比如vncviewer，tigervnc来连接到安装界面，比如上面的可以通过 群晖IP::5900来访问到。</p><p>接下来可以通过virsh来查看虚拟机列表：</p><blockquote><p>chroot@NAS916P:~$ sudo virsh list –all<br>Id  Name                  State<br>-—————————————————<br>-   centos7                shut off<br>-   debian8                shut off<br>-   lede                  shut off<br>-   lede1.9                shut off<br>-   win7                  shut off</p></blockquote><p>还可以通过virt-manager可视化工具来安装和配置。</p><p>更多详细请参照：<a href="http://www.isjian.com/virtualization/kvm-libvirt-qemu-2/">http://www.isjian.com/virtualization/kvm-libvirt-qemu-2/</a></p><h4 id="安装LEDE-X64实现软路由"><a href="#安装LEDE-X64实现软路由" class="headerlink" title="安装LEDE X64实现软路由"></a>安装LEDE X64实现软路由</h4><p><strong>NAS宿主机:</strong><br>    由于我的NAS(916+)带两张网卡，所以用来做软路由比较方便，按本篇做法可以实现软路由功能，pppoe拨号，内网dhcp 192.168.1.0网段。正常工作，但是我有个困扰很久的难题，一直无法解决，就是虚拟机LEDE充当路由之后，我该通过什么方式来访问宿主机呢，之前两张网卡被桥接后好像都消失了，原来的IP都无法访问。然后按朋友的帮助，说给eht0, eth1分别建立alias，然后桥接alias，我发现也没有用。<br>    先说说我的配置吧，千万别开机应用网络配置，导致机器无法访问（群晖916没有视频接口，一旦网络没了就没了），由于在chroot里，也不会怕自启动。新建一个文件/etc/network/interfaces.d/qemu</p><blockquote><p>auto lo<br>iface lo inet loopback</p><p># The primary network interface<br>auto br-lan<br>iface br-lan inet static<br>     address 192.168.1.2<br>     gateway 192.168.1.1<br>     netmask 255.255.255.0<br>     bridge_ports eth1</p><p>auto br-wan<br>iface br-wan inet static<br>    address 10.0.0.250<br>     bridge_ports eth0</p><p>auto eth0<br>iface eth0 inet manual</p><p>auto eth1<br>iface eth1 inet manual</p></blockquote><p>然后执行</p><blockquote><p>/etc/init.d/networking restart</p></blockquote><p>LEDE系统:<br>首先下载本论坛的img文件，具体下载不罗嗦了。<br>然后执行转换：</p><blockquote><p>qemu-img convert -f raw -O qcow2 lede-V1.9-Update3-x86-64-combined-squashfs.img lede-V1.9-Update3-x86-64-combined-squashfs.qcow2</p></blockquote><p>然后用virt-manger自己导入也可以，用我这个配置文件也可以：</p><blockquote><domain type='kvm'> <name>lede</name> <uuid>dc54a2a7-fe73-4dd6-8dbf-73a21e802bd0</uuid> <memory unit='KiB'>2097152</memory> <currentMemory unit='KiB'>2097152</currentMemory> <vcpu placement='static'>4</vcpu> <os>  <type arch='x86_64' machine='pc-i440fx-2.7'>hvm</type>  <boot dev='hd'/> </os> <features>  <acpi/>  <apic/>  <vmport state='off'/> </features> <cpu mode='custom' match='exact'>  <model fallback='allow'>Westmere</model> </cpu> <clock offset='utc'>  <timer name='rtc' tickpolicy='catchup'/>  <timer name='pit' tickpolicy='delay'/>  <timer name='hpet' present='no'/> </clock> <on_poweroff>destroy</on_poweroff> <on_reboot>restart</on_reboot> <on_crash>restart</on_crash> <pm>  <suspend-to-mem enabled='no'/>  <suspend-to-disk enabled='no'/> </pm> <devices>  <emulator>/usr/bin/kvm</emulator>  <disk type='file' device='disk'>    <driver name='qemu' type='qcow2'/>    <source file='/volume3/vm/images/lede-V1.9-Update3.qcow2'/>    <target dev='vda' bus='virtio'/>    <address type='pci' domain='0x0000' bus='0x00' slot='0x07' function='0x0'/>  </disk>  <controller type='usb' index='0' model='ich9-ehci1'>    <address type='pci' domain='0x0000' bus='0x00' slot='0x05' function='0x7'/>  </controller>  <controller type='usb' index='0' model='ich9-uhci1'>    <master startport='0'/>    <address type='pci' domain='0x0000' bus='0x00' slot='0x05' function='0x0' multifunction='on'/>  </controller>  <controller type='usb' index='0' model='ich9-uhci2'>    <master startport='2'/>    <address type='pci' domain='0x0000' bus='0x00' slot='0x05' function='0x1'/>  </controller>  <controller type='usb' index='0' model='ich9-uhci3'>    <master startport='4'/>    <address type='pci' domain='0x0000' bus='0x00' slot='0x05' function='0x2'/>  </controller>  <controller type='pci' index='0' model='pci-root'/>  <controller type='virtio-serial' index='0'>    <address type='pci' domain='0x0000' bus='0x00' slot='0x06' function='0x0'/>  </controller>  <interface type='bridge'>    <mac address='52:54:00:b4:e1:26'/>    <source bridge='br-lan'/>    <model type='virtio'/>    <address type='pci' domain='0x0000' bus='0x00' slot='0x03' function='0x0'/>  </interface>  <interface type='bridge'>    <mac address='52:54:00:c1:ae:db'/>    <source bridge='br-wan'/>    <model type='virtio'/>    <address type='pci' domain='0x0000' bus='0x00' slot='0x09' function='0x0'/>  </interface>  <serial type='pty'>    <target port='0'/>  </serial>  <console type='pty'>    <target type='serial' port='0'/>  </console>  <channel type='spicevmc'>    <target type='virtio' name='com.redhat.spice.0'/>    <address type='virtio-serial' controller='0' bus='0' port='1'/>  </channel>  <input type='tablet' bus='usb'>    <address type='usb' bus='0' port='1'/>  </input>  <input type='mouse' bus='ps2'/>  <input type='keyboard' bus='ps2'/>  <graphics type='spice' autoport='yes'>    <listen type='address'/>    <image compression='off'/>  </graphics>  <sound model='ich6'>    <address type='pci' domain='0x0000' bus='0x00' slot='0x04' function='0x0'/>  </sound>  <video>    <model type='qxl' ram='65536' vram='65536' vgamem='16384' heads='1' primary='yes'/>    <address type='pci' domain='0x0000' bus='0x00' slot='0x02' function='0x0'/>  </video>  <redirdev bus='usb' type='spicevmc'>    <address type='usb' bus='0' port='2'/>  </redirdev>  <redirdev bus='usb' type='spicevmc'>    <address type='usb' bus='0' port='3'/>  </redirdev>  <memballoon model='virtio'>    <address type='pci' domain='0x0000' bus='0x00' slot='0x08' function='0x0'/>  </memballoon> </devices></domain></blockquote><p>通过sudo virsh list –all就可以看到lede虚拟机在其中了。执行sudo virsh start lede，就起来了。然后通过sudo virsh console lede就进入了lede的终端，进行如下配置：<br>修改 /etc/config/network， 让eth0就是桥接的宿主机的br-lan，来做内网网卡，eth1就是桥接了宿主机的br-wan，来做pppoe拨号。</p><blockquote><p>config interface ‘loopback’<br>     option ifname ‘lo’<br>     option proto ‘static’<br>     option ipaddr ‘127.0.0.1’<br>     option netmask ‘255.0.0.0’</p><p>config interface ‘lan’<br>     option type ‘bridge’<br>     option ifname ‘eth0’<br>     option proto ‘static’<br>     option ipaddr ‘192.168.1.1’<br>     option netmask ‘255.255.255.0’<br>     option ip6assign ‘60’</p><p>config interface ‘wan’<br>     option ifname ‘eth1’<br>     option _orig_ifname ‘eth1’<br>     option _orig_bridge ‘false’<br>     option proto ‘pppoe’<br>     option username ‘user’<br>     option password ‘pass’<br>     option ipv6 ‘auto’<br>     option metric ‘40’</p></blockquote><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><p>虚拟化相关参照资料：<br><a href="http://cromwell-intl.com/linux/virtualization.html">http://cromwell-intl.com/linux/virtualization.html</a><br><a href="https://wiki.debian.org/SystemVirtualization">https://wiki.debian.org/SystemVirtualization</a><br><a href="https://libvirt.org/formatdomain.html#elementsDisks">https://libvirt.org/formatdomain.html#elementsDisks</a></p>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;概要&quot;&gt;&lt;a href=&quot;#概要&quot; class=&quot;headerlink&quot; title=&quot;概要&quot;&gt;&lt;/a&gt;概要&lt;/h4&gt;&lt;p&gt;​        仅需要实现软路由的朋友请移步&lt;a href=&quot;https://koolshare.cn/thread-76860-1-1.html&quot;&gt;《群晖官方套件VirtualDSM实现LEDE X64软路由》&lt;/a&gt; ，有更简单的方法。下面主要讲的chroot环境下的折腾方法，一般作为学习用就可以了，同志们，折腾的过程是痛并快乐的，昨晚破天荒10点半睡觉，感觉整个人都活过来了。所以身体还是最重要的。&lt;br&gt;​        在实现LEDE软路由过程中会发现网络无法访问问题，后来经过反复折腾，NAS硬重启N次后，发现chroot里设置的网络，一旦网线插拔变动，网络设置又会让群晖主系统更改，甚至导致群晖无法访问，需要长按关机才能恢复（今天得知其实可以通过群晖的pc端软件synology assistant来重制网络，我图样了）。&lt;br&gt;​</summary>
    
    
    
    <category term="chroot" scheme="https://bsdcpp.github.io/categories/chroot/"/>
    
    
    <category term="Synology" scheme="https://bsdcpp.github.io/tags/Synology/"/>
    
    <category term="chroot" scheme="https://bsdcpp.github.io/tags/chroot/"/>
    
  </entry>
  
  <entry>
    <title>Docker macvlan使用记录</title>
    <link href="https://bsdcpp.github.io/2020/11/23/Docker-macvlan%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"/>
    <id>https://bsdcpp.github.io/2020/11/23/Docker-macvlan%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</id>
    <published>2020-11-23T10:29:46.000Z</published>
    <updated>2021-03-16T01:41:02.652Z</updated>
    
    <content type="html"><![CDATA[<h4 id="新建macvlan接口"><a href="#新建macvlan接口" class="headerlink" title="新建macvlan接口"></a>新建macvlan接口</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#新建macvlan网络</span></span><br><span class="line">docker network create -d macvlan -o parent=【eth0】 【eNet】 \</span><br><span class="line">--subnet=【Network IP】 \</span><br><span class="line">--ip-range=【IP Range】 \</span><br><span class="line">--gateway=【Gateway IP】</span><br><span class="line"></span><br><span class="line">例子：</span><br><span class="line">docker network create -d macvlan -o parent=ovs_eth0 macnet --subnet=192.168.2.0/24 --ip-range=192.168.2.128/29 --gateway=192.168.2.1</span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="Dockerfile："><a href="#Dockerfile：" class="headerlink" title="Dockerfile："></a>Dockerfile：</h4><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">FROM debian:latest</span><br><span class="line">COPY start.sh torrc /tmp/</span><br><span class="line">RUN apt-get update \</span><br><span class="line">    &amp;&amp; apt-get -y install openssh-server tor cron sudo rsyslog \</span><br><span class="line">&amp;&amp; rm -rf /var/lib/apt/lists/* \</span><br><span class="line">    &amp;&amp; cat /tmp/torrc &gt;&gt; /etc/tor/torrc \</span><br><span class="line">&amp;&amp; chmod +x /tmp/start.sh \</span><br><span class="line">&amp;&amp; useradd -d /home/jervis -M -s /bin/bash -g root -G sudo jervis \</span><br><span class="line">&amp;&amp; echo <span class="string">&quot;root:1&quot;</span>|chpasswd \</span><br><span class="line">&amp;&amp; echo <span class="string">&quot;jervis:1&quot;</span>|chpasswd</span><br><span class="line"></span><br><span class="line">ENTRYPOINT [<span class="string">&quot;/bin/sh&quot;</span>, <span class="string">&quot;/tmp/start.sh&quot;</span>]</span><br></pre></td></tr></table></figure><p>torrc</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ControlPort 9051</span><br><span class="line">HashedControlPassword 16:876313025F85703C60CD9BCDFA1AE88349D9C67D23C97B6754649ADD05</span><br><span class="line"></span><br><span class="line">StrictNodes  1</span><br><span class="line"><span class="comment">#ExcludeNodes  &#123;cn&#125;,&#123;hk&#125;,&#123;mo&#125;</span></span><br><span class="line"><span class="comment">#ExitNodes &#123;jp&#125;,&#123;tw&#125;,&#123;sg&#125;,&#123;my&#125;</span></span><br><span class="line">ExitNodes &#123;at&#125;,&#123;jp&#125;,&#123;tw&#125;,&#123;sg&#125;,&#123;my&#125;</span><br></pre></td></tr></table></figure><p>start.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">service rsyslog start</span><br><span class="line">service ssh start</span><br><span class="line">service cron start</span><br><span class="line">service tor start</span><br><span class="line"></span><br><span class="line"><span class="comment">#su - jervis -c &quot;cd /backup/media/api/spiders/mitmproxy &amp;&amp; nohup sh run.sh &gt; /dev/null 2&gt;&amp;1 &amp;&quot;</span></span><br><span class="line"><span class="comment">#su - jervis -c &quot;aria2c -D --conf ~/.aria2/aria2rpc.conf&quot;</span></span><br><span class="line">touch /var/<span class="built_in">log</span>/docker.log</span><br><span class="line">tail -f /var/<span class="built_in">log</span>/docker.log</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t spideros .</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --restart always --name spiderDebian --hostname gingerOS --privileged --network macnet --ip=192.168.2.20  -v /volume3/backup:/backup -v /volume1/docker/spider-debian:/home/jervis -v /volume1/web:/web spideros</span><br></pre></td></tr></table></figure><h4 id="一些问题"><a href="#一些问题" class="headerlink" title="一些问题"></a>一些问题</h4><ol><li>某些服务无法重启动，比如service xxx stop无法停止：可能是无权限读取/proc内cwd, exe文件，docker用高权限(–privileged)启动即可;</li></ol><h4 id="后续完善"><a href="#后续完善" class="headerlink" title="后续完善"></a>后续完善</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">时区：</span><br><span class="line">dpkg-reconfigure tzdata</span><br><span class="line">编码：</span><br><span class="line">apt install locales &amp;&amp; dpkg-reconfigure locales</span><br></pre></td></tr></table></figure><h4 id="修改已经存在的容器配置"><a href="#修改已经存在的容器配置" class="headerlink" title="修改已经存在的容器配置"></a>修改已经存在的容器配置</h4><p>先docker inspect 容器id，查看配置路径，比如修改hostname，可以执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker inspect 容器id | grep -i hostname</span><br></pre></td></tr></table></figure><p>取得容器目录，进入目录，修改config.v2.json，然后记得重启docker服务就会生效。</p>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;新建macvlan接口&quot;&gt;&lt;a href=&quot;#新建macvlan接口&quot; class=&quot;headerlink&quot; title=&quot;新建macvlan接口&quot;&gt;&lt;/a&gt;新建macvlan接口&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#新建macvlan网络&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker network create -d macvlan -o parent=【eth0】 【eNet】 \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--subnet=【Network IP】 \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--ip-range=【IP Range】 \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--gateway=【Gateway IP】&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;例子：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker network create -d macvlan -o parent=ovs_eth0 macnet --subnet=192.168.2.0/24 --ip-range=192.168.2.128/29 --gateway=192.168.2.1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="docker" scheme="https://bsdcpp.github.io/categories/docker/"/>
    
    
    <category term="docker" scheme="https://bsdcpp.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>恶魔奶爸英语学习方法（转）</title>
    <link href="https://bsdcpp.github.io/2020/10/26/%E6%81%B6%E9%AD%94%E5%A5%B6%E7%88%B8%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%EF%BC%88%E8%BD%AC%EF%BC%89/"/>
    <id>https://bsdcpp.github.io/2020/10/26/%E6%81%B6%E9%AD%94%E5%A5%B6%E7%88%B8%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%EF%BC%88%E8%BD%AC%EF%BC%89/</id>
    <published>2020-10-26T03:29:30.000Z</published>
    <updated>2020-12-12T11:15:41.830Z</updated>
    
    <content type="html"><![CDATA[<p>原文链接: <a href="https://reishin.me/learn-english/">https://reishin.me/learn-english/</a></p><h2 id="英语学习导论"><a href="#英语学习导论" class="headerlink" title="英语学习导论"></a>英语学习导论</h2><ul><li>大量输入理论：靠量的积累，通过不同的语料，每天坚持</li><li><code>i + 1</code> 理论：在输入时要循序渐进，根据个人水平，增加一些难度</li></ul><a id="more"></a><h2 id="英语学习误区"><a href="#英语学习误区" class="headerlink" title="英语学习误区"></a>英语学习误区</h2><p><strong>神功大力丸思想</strong></p><p>错误思想：</p><ul><li>试图以一种简单策略来解决所有的英语问题</li><li>妄图以一套教材来解决英语学习的所有阶段的所有问题（新概念学完全套对阅读和语法帮助很大）</li><li>一定要在某种方法和达到某种水平之间建立因果关系</li><li>坚持一切以考试为核心，考前突击万事大吉</li><li>口语优先万能</li><li>口音标准纯正至上</li><li>语法无用论</li></ul><p>正确思想：</p><ul><li>在学习过程中，需要输入大量的听力和阅读材料</li><li>需要认真分析所处的水平基础和学习阶段</li><li>灵活选择不同的教材跟不同的方法策略</li></ul><h2 id="英语学习的基本原理"><a href="#英语学习的基本原理" class="headerlink" title="英语学习的基本原理"></a>英语学习的基本原理</h2><h3 id="如何学会方言母语"><a href="#如何学会方言母语" class="headerlink" title="如何学会方言母语"></a>如何学会方言母语</h3><p>开口说方言所经历的几个阶段：</p><ul><li>一张白纸阶段</li><li>环境浸入阶段</li><li>父母教导阶段</li><li>牙牙学语阶段</li><li>流利阶段</li></ul><h3 id="如何学会普通话"><a href="#如何学会普通话" class="headerlink" title="如何学会普通话"></a>如何学会普通话</h3><p>语言学习和训练，最重要的是实证，而不是所谓的科学原理。</p><ol><li>全国绝大部分电视台，全部使用普通话，而且绝大多数节目，都配有中文字幕<ul><li>只有海量的输入，才可以轻松轻松地听懂一种不熟悉的语音系统</li></ul></li><li>从最简单的字词重复开始慢慢认字，非常重视老师领读</li><li>重要的启蒙方法，学习汉语拼音和拼读</li><li>重视大声朗读</li><li>语文课堂上基本都用普通话来交流</li><li>上大学后，以普通话作为使用语言</li><li>语文成绩好，阅读量最重要</li></ol><h3 id="英语学习成功案例分析"><a href="#英语学习成功案例分析" class="headerlink" title="英语学习成功案例分析"></a>英语学习成功案例分析</h3><ol><li>家境基本都极好，英文能力和家境直接成正比<ol><li>上得起昂贵的培训班</li><li>和地域、父母素质关系很大</li></ol></li><li>没有人完全靠纯自学，基本都有良好的启蒙机会或者名师点拨</li><li>度过了入门期后，想成为高手，就一定且必须只能靠自学</li><li>所有的英语流利者，都非常注重一个练习方法，反复听和反复模仿</li><li>想通过考试，想写作有水平就必须学语法</li><li>都非常重视大量阅读<ol><li>从最简单的简易读物开始读起，一直读到英文原版</li><li>大量阅读对口语有潜移默化的影响</li></ol></li><li>绝大部分高手都是英语专业或是文学专业</li></ol><h2 id="英语学习的基本原则和注意事项"><a href="#英语学习的基本原则和注意事项" class="headerlink" title="英语学习的基本原则和注意事项"></a>英语学习的基本原则和注意事项</h2><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>刻意训练非常重要（刻意投入，集中注意力，理解吸收）</li><li>听力训练是刻意练习的第一步，也是最重要的一步<ul><li>听懂各种材料的能力，和你的口语跟写作水平关联非常大</li><li>听力能力是根，口语能力是叶</li><li>无法理解就做不到刻意练习</li></ul></li><li>一壶烧不开的水——持续不断的努力最重要<ul><li>一门技能的熟练和精通都意味着大脑需要建立数量庞大的神经元链接，这个过程需要漫长持久的训练</li><li>持续训练，而且必须是有意识集中精力的训练，否则就是无效输入</li><li>有四级基础的人，从慢速英语到常速英语，每天一两个小时，大约需要 90 天；在常速英语里可以输入，大约需要 180 天以上</li><li>英语学习如果不能一鼓作气，那么不如彻底放弃</li><li>选方法不如选材料，互联网是学习者的福音</li></ul></li></ul><h3 id="基本原则"><a href="#基本原则" class="headerlink" title="基本原则"></a>基本原则</h3><ul><li><p>集中注意力，刻意练习</p><ul><li>时间管理（30 分钟走神，果断停下）</li><li>方法采用（提高注意力的方法）</li><li>材料选择（材料过难难以跟上，换简单材料开始）</li></ul></li><li><p>保证大块时间投入</p><ul><li>只靠零碎时间你永远学不好英语，因为不能保证足够的语料输入</li></ul></li><li><p>纠结细节完全没有意义，重点在于流程规划和推进</p><ul><li>选择适合自己水平的材料</li><li>训练状态是集中注意力的</li><li>平时有意识地提高级别推动学习流程</li></ul></li><li><pre><code>i + 1</code></pre></li></ul><p>  原则</p><ul><li>选择材料要有一点挑战性</li><li>要主动有意识地升级</li></ul><ul><li><p>大量输入的同时重视规则学习</p><ul><li>对于发音细节和连续规则方面的系统学习和模仿</li><li>对语法大框架和构造句子规则的掌控</li></ul></li></ul><h2 id="英语学习入门"><a href="#英语学习入门" class="headerlink" title="英语学习入门"></a>英语学习入门</h2><h3 id="零基础阶段"><a href="#零基础阶段" class="headerlink" title="零基础阶段"></a>零基础阶段</h3><ol><li>一定要有好的启蒙老师</li><li>一定要学习音标</li><li>一定要重视少量内容的重复和模仿</li><li>不能仅仅背单词书，要在语料中来理解和记忆单词</li><li>一定要每天都学习，坚持至少一年以上</li><li>要从最简单的词组和句子入手。入门后，才可以学习语法</li></ol><h3 id="播讲类材料定义"><a href="#播讲类材料定义" class="headerlink" title="播讲类材料定义"></a>播讲类材料定义</h3><p>学生导向的书，一般就是播讲类材料（带有讲解的材料）。</p><h3 id="启蒙老师和播讲类材料的重要性"><a href="#启蒙老师和播讲类材料的重要性" class="headerlink" title="启蒙老师和播讲类材料的重要性"></a>启蒙老师和播讲类材料的重要性</h3><p>仅仅通过所谓浸泡在语言环境里，是不可能让你自动学会语言的。</p><p>全英文的播讲类材料是所有英文学习者的必修，而不是选修。</p><p>口才好不是抖机灵说段子，而是精通说明性、描述性语言。</p><h3 id="适合零基础人群的播讲类材料"><a href="#适合零基础人群的播讲类材料" class="headerlink" title="适合零基础人群的播讲类材料"></a>适合零基础人群的播讲类材料</h3><p>只推荐赖世雄的《赖世雄美语从头学》，不推荐学习高级。</p><p>推荐顺序是：先学发音，再学入门，然后是初级，接着是中级，如果学有余力，最后再学习语法。</p><p><strong>学习方法</strong>：</p><ol><li>正襟危坐，集中精力</li><li>准备好纸笔，认真听录音同时做笔记</li><li>听完一课后，把课文的朗读录音拿出来认真仔细地大声模仿，直到熟练于心</li><li>然后进行下一课的学习</li><li>平时零碎时间复习笔记上面的知识点</li></ol><h2 id="初级：英语学习初起步"><a href="#初级：英语学习初起步" class="headerlink" title="初级：英语学习初起步"></a>初级：英语学习初起步</h2><p>初级是整个课程中性价比最高的章节，学完这部分，各方面交谈沟通面试基本没问题，能听懂同事说话，搞定职场绝大部分英文口语问题。</p><p>希望达到的目标：</p><ul><li>基本的日常和商业口语用法词汇量达到大约三千左右</li><li>系统的学完发音，并掌握基本的连读知识和自然语言规律</li><li>具备基本的开口交流能力</li></ul><p>大致可以分为三大阶段：</p><p><strong>第一阶段</strong>：正音：1 ～ 3 周（推荐教材《赖世雄美语英标》）</p><p>第 1 步：</p><blockquote><p>看书听 CD 不要暂停，跟着录音大声模仿，从头到尾系统地把书学个两到三遍。中间遇到觉得难的章节和句子，记录相关笔记。</p><p>建议在一周内完成。</p></blockquote><p>第 2 步：</p><blockquote><p>找出重点和难点的章节，重点学习，反复听讲解和模仿。如果有困难，暂时先放着，影响不大。</p></blockquote><blockquote><p>尽量也在一两周内完成。</p></blockquote><p>建议至少要<strong>在 2 ～ 3 周内把书过几遍</strong>。</p><p><strong>注意要点</strong></p><ul><li>书中所有音标都适用 KK 美式音标标注的</li><li>发音不可能通过一本书就学好</li><li>学音标一定要用</li></ul><p><strong>第二阶段</strong>：日常口语和语流训练：1 ～ 2 个月</p><p>==推荐教材==：<code>Coach Shane&#39;s Daily Easy English Expression</code></p><p>教材共 1000 多个视频，每期视频 3 分钟左右，全部都是老师的讲解。</p><p>**==每一期视频建议人真多看几遍，同时跟着大声模仿。最好每天看十个视频以上，不停地跟着模仿==**。一天刚好 1 ～ 2 个小时，在两个月内学完绝大部分视频。</p><p><strong>第三阶段</strong>：商业材料听力和、商业领域用法和词汇量积累：1 ～ 2 个月</p><p>这个阶段是初级的补充材料，可以和第二阶段同时进行或者选择不学该阶段。</p><p>推荐教材：<code>ESLPOD</code></p><ul><li><code>Interview Questions Answered</code>《面试问题回答》</li><li><code>English for Business Meetings</code>《英文会议》</li><li><code>Using English at Work</code>《工作常用英文》</li></ul><p><strong>学习方法</strong></p><ol><li>从任何一本书开始，细细地从头到尾听若干遍，途中稍微记点笔记</li><li>反复听若干遍，如果仍不明白，把文本打开，阅读到当初的重点和难点，补充到笔记上去</li><li>以上步骤完成后，把教科书的音频剪切一下，分成慢速课文、慢速讲解、快速三个部分</li><li>将慢速课文部分全部听写下来，如果仍有不懂的，对照文本修改，改完再听写，改到自己可以一次性把所有慢速部分都听写出来为止</li><li>把文中出现的所有有用用法和单词都记熟练。搞定一本书后，继续下一本</li></ol><p>如果希望更进一步，可以拿出全部的快速录音进行跟读和模仿。跟读有三种模式：</p><ol><li>不看文本，播放一句后暂停，然后跟读。如果跟读不了，倒带反复</li><li>翻开文本，不暂停。跟着录音反复朗读，一气呵成</li><li>丢开文本，不暂停。跟着录音反复浪拂，一气呵成</li></ol><p>第一种跟读模式最难，但也是最有用的。一定要彻底突破了第一种后，才能进入第二种模式，这样培养的是查漏补缺。最后在进入第三种模式，熟练稳固，让自己可不看文本，流利脱口而出。</p><p>注意：<strong>只推荐使用快速部分进行跟读，用慢速的听力来跟读，意义不大</strong>。</p><h2 id="初中级：开始适应常速英语"><a href="#初中级：开始适应常速英语" class="headerlink" title="初中级：开始适应常速英语"></a>初中级：开始适应常速英语</h2><h3 id="初中级学习者的定义"><a href="#初中级学习者的定义" class="headerlink" title="初中级学习者的定义"></a>初中级学习者的定义</h3><p>适合以下人群：</p><ul><li>听慢速英语觉得不耐烦，但是觉得常速英语又太困难的</li><li>英语基础较好，也足够认真，但是听力训练很久，也无法突破图片英语听障，无法听懂常速英语</li><li>坚持练了很久听力，进步不大，还是一团模糊，根本不知道如何良好训练</li><li>有一定的听力基础，也愿意往上努力，但是觉得市面上的材料要么太难要么太枯燥，美剧电影太困难，新闻播报太枯燥，而且没有什么针对性，比较犹豫下一步规划怎么走</li></ul><h3 id="初中级学习者的目标和效果评估"><a href="#初中级学习者的目标和效果评估" class="headerlink" title="初中级学习者的目标和效果评估"></a>初中级学习者的目标和效果评估</h3><p>这部分食专门为了听力突破而设置的，希望达到的目标是：</p><ul><li>积累超过六千的词汇量</li><li>基本听懂常速英语，达到未来可以直接拿原版的美剧、书籍之类的材料学习</li><li>以后不用再学英语，而是用英语</li><li>可以应付绝大部分的口语场合，面对一群老外听说英语不犯怵</li></ul><h3 id="初中级学习者的学习规划和方法"><a href="#初中级学习者的学习规划和方法" class="headerlink" title="初中级学习者的学习规划和方法"></a>初中级学习者的学习规划和方法</h3><p>这个阶段大约需要三四个月的时间。主要学习两份材料，并且是同时学习。</p><p>第一份材料是 <code>Daily Dictation</code>。这是一套视频课程，一共有接近 300 期视频节目。</p><p>该课程的学习模式是：</p><ol><li>第一天首先播放一段非常短的常速录音（大约 30 字以内），内容来自美剧或者 CNN、BBC 等新闻，但是语速很快。播放的时候一句话反复播放很多遍，让你听写，如果一遍就能听写出来，说明是高手；如果要听 5 遍以上才能勉强写出来，需要努力。</li><li>第二天会公布答案。然后 Coach Shane 会针对这段文字进行细致的讲解，讲解视频大约 15 分钟左右。会讲解文本内容中的单词意思和词组用法，还会对这段自然语流进行彻底全面的剖析和讲解。</li></ol><p>资源可以在 B 站等地方找到，在两三个月内把 200 多期视频全部学完比较困难，学不完的话至少要学完 150 期。一天至少要学习 4～5 个视频。在学习的时候，如果有生词，要主动记录在笔记本或者手机词典里，平时零碎时间复习。听写本身完全不重要，最有价值的是老师的讲解，一定认真听，并跟着模仿学习。</p><p>第二份材料是 <code>EnglishPod</code>。这是一个教英语的广播节目，每一期都有固定的主题，大概有日常生活、情感问题、商务交流等内容。每一个都会标明等级为 <code>elementary</code>（初级）、<code>intermediate</code>（中级）、<code>upper intermediate</code>（中高级）、<code>advanced</code>（高级）。按标记分为 <code>BCDE</code>，其中 <code>E</code> 级别非常难，词汇量大，不建议轻易尝试，最好直接忽略掉。</p><p>当时的节目一共 365 期，可以网上搜索下载。每期 mp3 有三个，1 分钟短对话课文录音，10 分钟讲解录音，5 分钟复习录音。</p><p>★ 推荐学习方法</p><p>初期学习主要以播讲录音为主要学习材料，认真一期期听下去，边听边做笔记。根据自己的学习习惯来规划，每天听若干期，直到把 365 期全部学完。一般来说，一天听 5 期以上，100 天内可以完成一道两遍。听的时候主要跳过 <code>E</code> 级别的，全部认真听完以后开始精细学习。找出原文本，检查文本里有用的词汇和用法，补充到笔记中；挑出一些你特别喜欢的课程，然后找到单独的录音，接着开始跟读，直到熟练。</p><blockquote><p><strong>在初中级一定要做跟读</strong>。（重点）</p></blockquote><h2 id="中级：彻底突破常速英语"><a href="#中级：彻底突破常速英语" class="headerlink" title="中级：彻底突破常速英语"></a>中级：彻底突破常速英语</h2><p>中级的重点是：</p><ul><li>普及搭配的重要用法</li><li>演讲学习+大量泛听+复述新概念英语二</li><li>积累词汇，图片听障，流利口语</li></ul><h3 id="中级学习者的定义"><a href="#中级学习者的定义" class="headerlink" title="中级学习者的定义"></a>中级学习者的定义</h3><p>包括以下人群：</p><ul><li>英语还算不错，但口语听力就是差那么一口气</li><li>英文基础还不错，雅思托福成绩尚可，但打算真正提高水平能力的同学</li><li>在国外的留学生，总觉得自己的英文差点劲的同学</li></ul><h3 id="中级学习者的目标和效果评估"><a href="#中级学习者的目标和效果评估" class="headerlink" title="中级学习者的目标和效果评估"></a>中级学习者的目标和效果评估</h3><p>希望达到的目标：</p><ul><li>词汇量过八千</li><li>彻底突破听力和发音障碍</li><li>具备较熟练的阅读能力</li><li>具备较流畅的口语能力</li></ul><p>中级的学习阶段，一共有三个。需要选择三种不同的材料，运用三种不同的方法。</p><p>如果时间紧张，可以按照 A -&gt; B -&gt; C 的顺序来依次学习。</p><p>如果时间充裕，可以三份材料同时学习，每天时间段分成 A、B、C 三块同时进行，每日三次训练。这三者区别主要是侧重点不同。</p><ul><li>在英语语言的表达中，表意的重要组成部分不是孤立的单词，而是<strong>固定的语块</strong>。</li><li>所谓纯正的英语，是指你有能力用各种小词汇组成的固定搭配来灵活表意，并且注意符合语言的场合环境，这才算是真正的英语好。</li></ul><p>因此，想解决主动词汇和表达法的难题，最重要的是首先需要有<strong>语块</strong>这个概念，然后进行大量阅读。在阅读的过程中，不知不觉就会积累出很多搭配。除了大量泛读以外，还必须先进行一定剂量的精读，来培养自己主动积累语块搭配的意识。<strong>只记忆这个语块的单个意思，而不是去记生词的所有意思。</strong></p><h3 id="中级学习的具体流程规划"><a href="#中级学习的具体流程规划" class="headerlink" title="中级学习的具体流程规划"></a>中级学习的具体流程规划</h3><h4 id="A-阶段：毕业典礼演讲精度模仿"><a href="#A-阶段：毕业典礼演讲精度模仿" class="headerlink" title="A 阶段：毕业典礼演讲精度模仿"></a>A 阶段：毕业典礼演讲精度模仿</h4><ul><li>侧重点：积累词汇、提高表达法</li><li>注意语体的概念（语体指的是<strong>在适当的场合，使用适当的语言</strong>）</li></ul><p>选择演讲作为精读模仿材料的原因是：广播、新闻、美剧、原版小说、报刊等等作为口语和写作的表达增强练习材料，都不是特别好的语料，因为<strong>语体</strong>不适合。而演讲则是一个非常严谨靠谱的语体，从演讲开始作为主要语料，学习写作和口语用词，对于中级学习者来说，是最好的选择。</p><p><strong>国外演讲种类</strong>：</p><ul><li>学术演讲：大学里的授课，除非是简单的科普或者人文艺术类能听懂，是最难的材料</li><li>历史上的经典演讲：比如 <code>I have a dream</code> 之类的，因为年代问题，用词和句式都非常复杂</li><li>TED 演讲：学术演讲的简易版，但是难度也是非常大的</li><li>政治演讲：竞选演讲、就职典礼演讲，演讲本身难度不高，但是主要都是美国的政策等，比较枯燥，让人不容易坚持</li><li>商业演讲和产品发布会：这个类型的演讲基本都很简单，而且很实用，对工作帮助很大</li><li>毕业典礼演讲：这种演讲类型被称为 <code>Commencement Speech</code></li></ul><p>在这些演讲中，难度最低、内容最有趣的就是<strong>毕业典礼演讲</strong>。在毕业典礼演讲中用到的英文用法，是最值得学习的东西。</p><ul><li>演讲者们的用法和时态，都是最简单的叙述体，对于学习口语的表达、讲故事的手法有着很大的帮助</li><li>语速慢，内容简单实用，不会有难词和长难句，学习难度正好</li><li>叙述口气的语体，哲理化的小故事，商业概念事件的阐述，对日常口语和商务口语都有极大的帮助</li></ul><p>毕业典礼演讲视频可以通过搜索 <code>commencement speech</code> 找到。</p><p><strong>具体的学习方法</strong></p><p>至少要听读完 30-50 篇，每篇都要精读。</p><p>精读需要收集视频和文本，打印出来，一篇篇攻克。看一遍视频，有个基本的理解后，再拿出文本仔细阅读，高亮出不会的单词搭配和觉得不错的短语搭配。</p><p>例如马云的演讲稿：</p><p>从这篇演讲稿中可以发现如下的一些重点：</p><h4 id="B-阶段：大量泛听美剧"><a href="#B-阶段：大量泛听美剧" class="headerlink" title="B 阶段：大量泛听美剧"></a>B 阶段：大量泛听美剧</h4><p>看美剧只能看英文字幕，不可以看中文字幕或者中英字幕。</p><p>不推荐情景喜剧类的，这一类非常不适合学英语。</p><p>值得推荐的美剧是<strong>生活职场类</strong>和<strong>青春类</strong>的美剧，列表如下：</p><ul><li>Felicity</li><li>Charmed 圣女魔咒</li><li>绝望的主妇</li><li>星际迷航 The Next Generation</li><li>超人前传</li><li>明星伙伴</li><li>发展受阻</li></ul><p>除了上述列举的，还可以尝试以下几部：</p><ul><li>吸血鬼猎人巴菲</li><li>道森的小溪</li><li>罗斯维尔</li><li>Angel 黑暗天使</li><li>雪山镇</li><li>篮球兄弟</li><li>邪恶力量</li></ul><h4 id="C-阶段：口语输出练习"><a href="#C-阶段：口语输出练习" class="headerlink" title="C 阶段：口语输出练习"></a>C 阶段：口语输出练习</h4><p>需要使用复述幽默短文的方法，这也是口语输出练习的最好方法。</p><p>训练方法主要是切入视角 POV 复述。POV 指的是不同视角，即 <code>point of view</code>，以不同人的视角来进行复述，复述时需要始终保持第一人称口吻。</p><p>用新概念英语 2 第一课举例：</p><ol><li>首先拿出一个小故事，大声朗读若干遍，弄清各种生词</li><li>开始进行切换视角口头复述。只要愿意发挥想象力，每一个故事都可以用两到三种人称视角来复述</li><li>在复述的时候用手机把复述的内容录音下来</li><li>复述完毕后，对自己的录音进行修改，注意表达和发音错误，然后再重新复述，知道流利为止</li><li>多视角练习完毕后，把文章中比较不错的表达方法摘抄下来做笔记，在零碎时间复习</li><li>最好有水平差不多的伙伴搭档</li></ol><p>复述时的注意事项：</p><ul><li>首先，尽量不要看原文，直接脱稿复述，如果有困难，那么看原文复述也可以，但是始终要录音</li><li>其次，在复述发挥想象力固然是好，但是尽量中规中矩，扎扎实实练好自己口语和造句能力才是主要目的</li><li>说的时候要严格注意自己的语法和时态，如果不确定复述时候用什么时态好，那么看原文的文章时态用过去时还是现在时，直接采用原文的时态</li></ul><p>这个阶段的材料只能是那种稍长的短片幽默故事，至少 100 个字以上。</p><p>推荐材料有：</p><ul><li>《新概念英语》 2 和 3</li><li>《读幽默故事学英语词汇》全套六册</li><li>《世界幽默故事精选》1、2、3：这套书难度相比上面两种难度过高，仅供学有余力的人选择</li></ul><h4 id="训练规划参考"><a href="#训练规划参考" class="headerlink" title="训练规划参考"></a>训练规划参考</h4><p>首先，确保自己的英文基础达到了这个阶段。</p><p>其次，这个练习要大量地做，至少要练几百个故事，每个故事都要练习 3 个视角以上。每天花多少时间取决于自己，但是至少要半个小时。</p><p>在训练的同时，最好大量阅读各类通俗小说。</p><p><strong>通俗小说推荐</strong></p><p>男生可以看 <code>Sidney Sheldon</code>、<code>James Hadley Chase</code>、<code>John Grisham</code> 这些人的作品，故事都很吸引人。</p><p>女生则可以看 <code>Nicholas Sparks</code> 和 <code>Janet Evanovich</code> 的爱情小说。</p><p>这些作家写作都相对比较口语化，一些常见单词出现频率较高，多阅读对于口语和考试都有很大的帮助。</p><h2 id="中高级：英文语法和阅读"><a href="#中高级：英文语法和阅读" class="headerlink" title="中高级：英文语法和阅读"></a>中高级：英文语法和阅读</h2><p>这部分的重点是<strong>语法</strong>、<strong>大量阅读</strong>和<strong>增加词汇量</strong>。</p><h3 id="中高级的定位和适合人群"><a href="#中高级的定位和适合人群" class="headerlink" title="中高级的定位和适合人群"></a>中高级的定位和适合人群</h3><p>首先整个学习过程可以分为 A、B、C 三个体系。A 即零基础，B 是初级到中级，C 是中高级和高级。</p><p>在这个阶段，最适合的人群是：</p><ul><li>已经学完 A 和 B 体系的学习人员</li><li>没有学完 A 或 B 体系，但是基础在四级及格左右，希望能够突破考试拿到高分的同时提高英文水平的同学</li><li>现实中没有条件练习听说，非常希望能够持续学英语的</li></ul><h3 id="中高级学习者的目标和效果评估"><a href="#中高级学习者的目标和效果评估" class="headerlink" title="中高级学习者的目标和效果评估"></a>中高级学习者的目标和效果评估</h3><p>在这个阶段，希望达到的水平：</p><ul><li>词汇量达到一万三到一万五</li><li>搞定基本语法和句法</li><li>具备较熟练的阅读能力，阅读速度加快</li><li>各类考试的阅读题和写作题能拿高分</li></ul><h3 id="具体方法规划"><a href="#具体方法规划" class="headerlink" title="具体方法规划"></a>具体方法规划</h3><p>中高级只有两个阶段：</p><ul><li>语法（提高语言水平的第一步）</li><li>大量阅读和积累词汇</li></ul><p>这两个阶段可以按先后来，也可以同时开始。</p><h4 id="第一阶段"><a href="#第一阶段" class="headerlink" title="第一阶段"></a>第一阶段</h4><p>第一阶段中，一本赖世雄老师经典语法配上 MP3 教程，认真听完讲座病仔细阅读文本。一本是剑桥中级英语语法。<strong>这两个工作一定要按顺序来</strong>。</p><h4 id="第二阶段"><a href="#第二阶段" class="headerlink" title="第二阶段"></a>第二阶段</h4><p>第二阶段中，又可以细分为四个小阶段：</p><ol><li>入门熟悉</li><li>自传</li><li>传记</li><li>社科</li></ol><p>第 1 阶段，也称为入门适应期。这个阶段不应该培养词汇量和输入量，而应该培养适应和成就感。应该首先挑选一些比较薄、比较简单的书来看，<strong>看完很重要</strong>，忘记了也没关系，主要是为了培养成就感。</p><p>推荐书籍：</p><ul><li>《谁动了我的奶酪》，Who moved my cheese</li><li>《礼物》，The present</li><li>《一分钟经理人》，The One Minute Manager</li><li>《把信送到加西亚》，A Message to Garcia</li><li>《富爸爸穷爸爸》，Rich Dad，Poor Dad</li></ul><p>上面的书吃透，大致上就有了初步的原版书基础。</p><p>第 2 阶段，主要是商业巨子的<strong>名人自传</strong>。在开始读原版书的时候，尽可能的做到从书中看到的用法和表达，能立刻在生活中实际运用，这也对我们书籍的选择要求就很高。</p><p>在文学类的书籍中，有很多复杂的长难句和绚丽的大词，但是这些无论是说话、写信、邮件，甚至考试写文章做阅读题，都没有直接的帮助。大人物的自传则不一样，在被询问道相关的过去经历和项目经验的时候，可以直接把传记中的表达法拿来用，非常地道。阅读业内大牛的自传，可以积累大量和本行业相关的名词，而且文字相对都比较浅显，行文叙述都比较平易，非常便于理解。</p><p><strong>搞定叙述的表达，不论是考试还是日常使用，英文读和写都能解决起码七成以上的问题</strong>。</p><p>名人传记的选择，文体娱乐明星传记 &gt; 商业巨子传记 &gt; 各学科牛人传记 &gt; 政治人物传记（此类不推荐）。</p><p>推荐书籍：</p><ul><li>《奉上幸福》，Delivering Happiness</li><li>iWoz 自传</li><li>杰克韦尔奇自传 Straight from the Gut 和 Winning</li><li>费曼先生的两部自传</li></ul><p>第 3 阶段则是传记，推荐书籍有：</p><ul><li>史蒂夫乔布斯传</li><li>The Second Coming of Steve Jobs</li><li>本杰明富兰克林传</li></ul><p>第 4 阶段则是社科，这一类面比较广，这里只是推荐部分但是不局限于此。</p><ul><li>阿尔文•托夫勒的 Power Shift、Future Shock、The Third Wave 这三本</li><li>Malcolm Gladwell 的书籍</li><li>Bill Bryson 的著作</li></ul><p>以上三位，从文字难度上来说，是由浅入深的。</p><h2 id="高级：如何积累两万词汇量"><a href="#高级：如何积累两万词汇量" class="headerlink" title="高级：如何积累两万词汇量"></a>高级：如何积累两万词汇量</h2><h3 id="适用人群"><a href="#适用人群" class="headerlink" title="适用人群"></a>适用人群</h3><ul><li>雅思托福四六级高分，但是英语并不能真正做到运用自如</li><li>写作邮件和论文都还可以，但是与人沟通，实在不能做到随心所欲，彻底地轻松自如</li></ul><blockquote><p>高级部分的学习时间很长，至少需要 1～2 年时间。而且 99% 以上对于学完中高级部分的人来说，没有必要学习高级课程。</p></blockquote><h3 id="学习原理和大致案例"><a href="#学习原理和大致案例" class="headerlink" title="学习原理和大致案例"></a>学习原理和大致案例</h3><p>这个课程中的所有阶段，难度是循序渐进的，顺序不可以打乱。</p><h4 id="第一阶段：精读美剧波士顿法律"><a href="#第一阶段：精读美剧波士顿法律" class="headerlink" title="第一阶段：精读美剧波士顿法律"></a>第一阶段：精读美剧波士顿法律</h4><p>找到美剧《波士顿法律》剧集，最好是无字幕的，一共有五季。同时需要剧集的剧本。每一集先看若干遍，然后开始读剧本，把剧本里的每个生词或者难以理解的地方都摘抄出来，把它们弄懂。直到把这部剧集全部看完。（建议看十遍以上）。然后把每一集里面的结案陈词部分摘录出来，反复跟着模仿。如果每天 3 小时以上，大约需要半年的时间完成。</p><p>其他类似的剧集有《白宫风云》The West Wing 等。</p><p>客观全篇精读和讨论分析波士顿法律，不仅可以提高英语，同时也是比较合理的思维训练和口才训练作业。</p><h4 id="第二阶段：中国主题的语块学习法"><a href="#第二阶段：中国主题的语块学习法" class="headerlink" title="第二阶段：中国主题的语块学习法"></a>第二阶段：中国主题的语块学习法</h4><p>中国主题的内容和我们是息息相关的，题材也都很熟悉。所以在阅读心理上就比较容易接受，有生词也不会觉得太难，靠猜也能猜到文章大致在讲的内容。</p><p>这部分内容主要是外国人写的书和报刊。推荐从书先看起，因为报刊比较零碎，生词出现的重复频率较低，难度较大。</p><p>推荐书籍：</p><ul><li>何伟的三本书《River Town》、《ORACLE BONES》、《COUNTRY DRIVING》</li><li>张彤禾《FACTORY GIRLS》</li><li>牛津的通识读本《MODERN CHINA》</li><li>James McGregor 的《One Billion Customers》</li><li>Evan Osnos 的《Age of Ambition: Chasing Fortune, Truth, and Faith in the New China》</li></ul><p>这些书籍基本都是大师级的笔法和实用的内容加客观的分析，对读懂中国当下也很有帮助。读完这些后，词汇量基本就增加很多了。</p><p>报刊推荐：</p><ul><li>外交政策</li><li>美国 CNN （推荐）</li><li>BBC（推荐）</li><li>金融时报</li><li>经济学人（推荐）</li><li>南华早报</li><li>中国来信</li></ul><h2 id="英语考试的真相：针对英语考试的准备"><a href="#英语考试的真相：针对英语考试的准备" class="headerlink" title="英语考试的真相：针对英语考试的准备"></a>英语考试的真相：针对英语考试的准备</h2><p>备考人群可以分为四大类。</p><p>第一类是<strong>完全零基础，但是短期内又不得不通过考试的人</strong>。零基础指的是从小没有学习过英语，高考英语都不及格的人。这部分人群基数特别大，容易被忽悠。对于这部分人，彻底死心，不要痴心妄想。</p><p>第二类是<strong>基础较差，没有信心通过考试的人</strong>。这部分人群时培训市场上基数最大的人群，也是最容易被忽悠的。 对于这部分的人群的建议是，放弃一切培训班，拿出一两年时间，用心打好自己的英语基础。</p><p>英语学习分为两个部分，一个是知识积累，一个是能力提高。如果是以考试为直接目标，那么知识积累和能力提高可以齐头并进。</p><p>打基础的方法主要分为A、B、C 三个阶段。</p><p>A 阶段选用的材料有三份。第一个是《赖世雄美语音标》，花两周的时间认真学完；第二个是 <code>Daily Easy English Expression</code>，每天十期以上并且大声跟读；第三个就是背单词的 APP。</p><p>B 阶段主要学习语法，第一步是学习《赖氏经典英语语法》，第二步是学习《剑桥中级英语语法》英文版。</p><p>C 阶段需要培养语音的感知能力，选用的材料是 <code>Coach Shane</code> 的 <code>Daily Dictation</code>。同时也要大量阅读真题文章。</p><p>第三类是<strong>刚好卡在及格线上，想要提高自己通过几率的人</strong>。这部分人群参加培训班可能有点用，但是高分前提就是自己的英语能力要非常强。</p><p>如果不上培训班，也可以采用上面 B、C 阶段的方法来提高自己。</p><p>第四类是<strong>可以通过考试但是希望拿高分的人</strong>。不建议这部分人群再去刷题刷高分。</p><p>对于考试的突击和提高，首先，所有的考试涉及的能力考查无外乎 7 项，听、说、读、写、词汇、语音和语法。</p><p>语音+听力，如果是美国的考试，可以使用 <code>Daily Dictation</code> （针对这个阶段的同学）和美音的听力教材《Step By Step》；如果是英国的考试，选用 <code>BBC Learning English</code> 和 <code>Listen to this</code>，前者中有两个频道比较好，分别是 <code>talk about english</code> 和 <code>6 minute english</code>。</p><p>口语+语音，使用 《赖世雄美语音标》和 <code>Daily Dictation</code> 就可以完全搞定。流利性的问题，大量模仿毕业典礼演讲和复述幽默小故事即可，前文也有提到。</p><p>阅读+语法，赖世雄语法讲座搭配《剑桥中级英语语法》英文版。</p><p>写作+词汇，采用英文报刊的中国报道部分，方法可以参考前文。</p><h2 id="针对听说读写语法发音词汇的专项建议"><a href="#针对听说读写语法发音词汇的专项建议" class="headerlink" title="针对听说读写语法发音词汇的专项建议"></a>针对听说读写语法发音词汇的专项建议</h2><h3 id="词汇绝对不能单独拿出来练习"><a href="#词汇绝对不能单独拿出来练习" class="headerlink" title="词汇绝对不能单独拿出来练习"></a>词汇绝对不能单独拿出来练习</h3><p>三大原因：</p><ul><li>一词多义，没办法记</li><li>光记住意思，不会用</li><li>死记硬背，效果特别差</li></ul><p>良好的学习单词的方法是：</p><ul><li>在语境中学习单词——在听力和阅读材料中，慢慢积累单词</li><li>语块学习法</li></ul><h3 id="强练口语，等于白练"><a href="#强练口语，等于白练" class="headerlink" title="强练口语，等于白练"></a>强练口语，等于白练</h3><p>培训机构的教学模式往往就是看视频、跟着读和外教聊天。这三者都是针对性较差，效果一般的训练方法。</p><h3 id="阅读可以单独集中训练"><a href="#阅读可以单独集中训练" class="headerlink" title="阅读可以单独集中训练"></a>阅读可以单独集中训练</h3><p>阅读量大，意味着词汇量足，阅读速度快。对于在国内备考应试的人来说，最好的方法就是广读书。</p><p>短线的阅读训练就是读短篇文章。优点就是有针对性，面向考试。缺点是非常枯燥，不容易坚持，并且效果不一定好。</p><p>长线的阅读训练的优点是文章相对有意思，容易坚持，不枯燥。确实也是不太容易坚持，要求时间比较长。这种训练适合打算提高英语能力和基础的同时，又想通过考试的同学。</p><p>训练流程分为四个阶段。</p><p>第一阶段<strong>熟悉感知，享受阅读</strong>。这个阶段，不要讲究方法和能不能看懂，但是要多读章节书（恐怖、悬疑和科普），至少 50 本。</p><p>章节书的推荐：</p><ul><li>神奇树屋 Magic Tree House（科普类）</li><li>鸡皮疙瘩 Goose Bumps（恐怖类）</li><li>Nate the Great、A to Z Mysteries、Cam Jansen Mysteries、Capital Mysteries（悬疑类）</li></ul><p>第二阶段<strong>初步入门，泛读为佳</strong>。这个阶段，要读大概十本左右的原版书，推荐遇到生词就大胆猜，猜不出来就查，不用复习。</p><p>小说选择：</p><ul><li>哈利波特系列和暮光之城系列（奇幻类）</li><li>Sidney Sheldon 和 James Patterson 的书（直男导向）</li><li>Nicholas Sparks 和 John Green 的书（女性导向）</li></ul><p>第三阶段<strong>认真通读，积累词汇</strong>。推荐商业类图书和商业巨子的传记，前文有提到过。</p><p>第四阶段<strong>反复精读，提升表达</strong>。主要就是采用语块学习法，材料是中国主题的书和文章。</p><h3 id="语音可以速成，但是要和听力一起训练"><a href="#语音可以速成，但是要和听力一起训练" class="headerlink" title="语音可以速成，但是要和听力一起训练"></a>语音可以速成，但是要和听力一起训练</h3><p>听力材料的训练，推荐的还是之前提到过的 <code>Daily Easy English Expression</code> 和 <code>Daily Dictation</code>。</p><p>在完成上述所有的内容后，精读一部美剧，反复观看，选出喜欢的片段模仿。</p><h3 id="英语写作的奥秘"><a href="#英语写作的奥秘" class="headerlink" title="英语写作的奥秘"></a>英语写作的奥秘</h3><p>非文学写作，基本都包含立论观点、整体逻辑结构+例证、收尾这几个关键因素。写作中高分的关键一是立论和逻辑结构，二是语言技巧。语言技巧主要分成<strong>句式结构和语言用法</strong>。速成的方法就是<strong>学语法，学造句</strong>。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;原文链接: &lt;a href=&quot;https://reishin.me/learn-english/&quot;&gt;https://reishin.me/learn-english/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;英语学习导论&quot;&gt;&lt;a href=&quot;#英语学习导论&quot; class=&quot;headerlink&quot; title=&quot;英语学习导论&quot;&gt;&lt;/a&gt;英语学习导论&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;大量输入理论：靠量的积累，通过不同的语料，每天坚持&lt;/li&gt;
&lt;li&gt;&lt;code&gt;i + 1&lt;/code&gt; 理论：在输入时要循序渐进，根据个人水平，增加一些难度&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="英语学习" scheme="https://bsdcpp.github.io/categories/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="English" scheme="https://bsdcpp.github.io/tags/English/"/>
    
  </entry>
  
  <entry>
    <title>各科学期小结</title>
    <link href="https://bsdcpp.github.io/2020/10/14/%E5%90%84%E7%A7%91%E5%AD%A6%E6%9C%9F%E5%B0%8F%E7%BB%93/"/>
    <id>https://bsdcpp.github.io/2020/10/14/%E5%90%84%E7%A7%91%E5%AD%A6%E6%9C%9F%E5%B0%8F%E7%BB%93/</id>
    <published>2020-10-14T08:44:37.000Z</published>
    <updated>2020-12-12T11:15:23.983Z</updated>
    
    <content type="html"><![CDATA[<h4 id="语文学习"><a href="#语文学习" class="headerlink" title="语文学习"></a>语文学习</h4><ul><li><p>历史故事听、读，全面铺开，“大语文”适合对历史有个    总体认识后的孩子，用来对之前所学知识的比对和拓展；</p></li><li><p>课本涉及到作品时代、人物背景的，最好能先提前了解；</p></li><li><p>课本预习：</p><ul><li>简单朗读、听课文音频、生字临摹</li></ul></li><li><p>地理知识</p></li></ul><a id="more"></a><h4 id="英语学习"><a href="#英语学习" class="headerlink" title="英语学习"></a>英语学习</h4><ul><li>分级RAZ</li><li>app:<ul><li>BBC learning English</li><li>ABA English</li><li></li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;语文学习&quot;&gt;&lt;a href=&quot;#语文学习&quot; class=&quot;headerlink&quot; title=&quot;语文学习&quot;&gt;&lt;/a&gt;语文学习&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;历史故事听、读，全面铺开，“大语文”适合对历史有个    总体认识后的孩子，用来对之前所学知识的比对和拓展；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;课本涉及到作品时代、人物背景的，最好能先提前了解；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;课本预习：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;简单朗读、听课文音频、生字临摹&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;地理知识&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="学习" scheme="https://bsdcpp.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="study" scheme="https://bsdcpp.github.io/tags/study/"/>
    
  </entry>
  
  <entry>
    <title>vim使用技巧</title>
    <link href="https://bsdcpp.github.io/2020/10/02/vim%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    <id>https://bsdcpp.github.io/2020/10/02/vim%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</id>
    <published>2020-10-02T02:59:46.000Z</published>
    <updated>2020-12-12T11:15:11.432Z</updated>
    
    <content type="html"><![CDATA[<h4 id="vim中delete（backspace）键不能向左删除"><a href="#vim中delete（backspace）键不能向左删除" class="headerlink" title="vim中delete（backspace）键不能向左删除"></a>vim中delete（backspace）键不能向左删除</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VIM使用了 compatible 模式，或者把 backspace 变量设置为空了…其实compatible模式是VIM为了兼容vi而出现的配置，它的作用是使VIM的操作行为和规范和vi一致，而这种模式下backspace配置是空的。即意味着backspace无法删除 indent ， end of line ， start 这三种字符。</span><br></pre></td></tr></table></figure><p>在默认状态下，delete（backspace）按下只会删除本次插入模式下插入的文本，这跟backspace的模式设置有关，其模式可以设置为以下三种模式：</p><ul><li>0 same as “:set backspace=” (Vi compatible)</li><li>1 same as “:set backspace=indent,eol”</li><li>2 same as “:set backspace=indent,eol,start”</li></ul><h5 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h5><p>知道了原因，就好解决了，只需要将backspace的模式设置成2就可以了，在<code>~/.vimrc</code>中添加了一下内容，保存，下次进入vim就可以在插入模式下任意使用delete（backspace）键了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot; 解决插入模式下delete/backspce键失效问题</span></span><br><span class="line"><span class="string">set backspace=2</span></span><br></pre></td></tr></table></figure><a id="more"></a>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;vim中delete（backspace）键不能向左删除&quot;&gt;&lt;a href=&quot;#vim中delete（backspace）键不能向左删除&quot; class=&quot;headerlink&quot; title=&quot;vim中delete（backspace）键不能向左删除&quot;&gt;&lt;/a&gt;vim中delete（backspace）键不能向左删除&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;VIM使用了 compatible 模式，或者把 backspace 变量设置为空了…其实compatible模式是VIM为了兼容vi而出现的配置，它的作用是使VIM的操作行为和规范和vi一致，而这种模式下backspace配置是空的。即意味着backspace无法删除 indent ， end of line ， start 这三种字符。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;在默认状态下，delete（backspace）按下只会删除本次插入模式下插入的文本，这跟backspace的模式设置有关，其模式可以设置为以下三种模式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;0 same as “:set backspace=” (Vi compatible)&lt;/li&gt;
&lt;li&gt;1 same as “:set backspace=indent,eol”&lt;/li&gt;
&lt;li&gt;2 same as “:set backspace=indent,eol,start”&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&quot;解决&quot;&gt;&lt;a href=&quot;#解决&quot; class=&quot;headerlink&quot; title=&quot;解决&quot;&gt;&lt;/a&gt;解决&lt;/h5&gt;&lt;p&gt;知道了原因，就好解决了，只需要将backspace的模式设置成2就可以了，在&lt;code&gt;~/.vimrc&lt;/code&gt;中添加了一下内容，保存，下次进入vim就可以在插入模式下任意使用delete（backspace）键了：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; 解决插入模式下delete/backspce键失效问题&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;set backspace=2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="编辑器" scheme="https://bsdcpp.github.io/categories/%E7%BC%96%E8%BE%91%E5%99%A8/"/>
    
    
    <category term="vim" scheme="https://bsdcpp.github.io/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>Hexo用例</title>
    <link href="https://bsdcpp.github.io/2020/09/23/hexo%E7%94%A8%E4%BE%8B/"/>
    <id>https://bsdcpp.github.io/2020/09/23/hexo%E7%94%A8%E4%BE%8B/</id>
    <published>2020-09-23T05:23:18.359Z</published>
    <updated>2020-09-25T14:08:22.069Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><pre class="mermaid">graph TDA[Hard] -->|Text| B(Round)B --> C{Decision}C -->|One| D[Result 1]C -->|Two| E[Result 2]</pre><pre class="mermaid">graph TDA[闹钟响起] --> B(与床板分离)B --> C{分离成功?}C --> |yes| D[快乐的一天]C --> |no| BB --> E[(数据库咯)]</pre><pre class="mermaid">pie    title Key elements in Product X    "Calcium" : 42.96    "Potassium" : 50.05    "Magnesium" : 10.01    "Iron" :  5</pre><pre class="mermaid">classDiagram      Animal <|-- Duck      Animal <|-- Fish      Animal <|-- Zebra      Animal : +int age      Animal : +String gender      Animal: +isMammal()      Animal: +mate()      class Duck{          +String beakColor          +swim()          +quack()      }      class Fish{          -int sizeInFeet          -canEat()      }      class Zebra{          +bool is_wild          +run()      }</pre><pre class="mermaid">gantt        dateFormat  YYYY-MM-DD        title 快乐的生活        section 吃一把鸡就学习        学习            :done,    des1, 2014-01-06,2014-01-09        疯狂学习               :active,  des2, 2014-01-09, 3d        继续疯狂学习               :         des3, after des2, 5d        吃鸡！               :         des4, after des3, 4d        section 具体内容        学习Python :crit, done, 2014-01-06,72h        学习C++          :crit, done, after des1, 2d        学习Lisp             :crit, active, 3d        学习图形学        :crit, 4d        跳伞           :2d        打枪                      :2d</pre><pre class="mermaid">sequenceDiagram李雷 ->> 韩梅梅: Hello 梅梅, How are you?Note right of 韩梅梅: 韩梅梅心想韩梅梅 -->> 李雷: I'm fine, thanks, and you?</pre><h3 id="插入图片和视频"><a href="#插入图片和视频" class="headerlink" title="插入图片和视频"></a>插入图片和视频</h3><div class="video-container"><iframe src="https://www.youtube.com/embed/U1eQfA3fXa4" frameborder="0" loading="lazy" allowfullscreen></iframe></div>]]></content>
    
    
      
      
    <summary type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

&lt;pre class=&quot;mermaid&quot;&gt;graph TD
A[Hard] --&gt;|Text| B(Round)
B --&gt; C{Decision}
C --&gt;|One| D[Result 1]
C --&gt;|Two| E[Result 2]&lt;</summary>
      
    
    
    
    <category term="Hexo" scheme="https://bsdcpp.github.io/categories/Hexo/"/>
    
    
    <category term="hexo" scheme="https://bsdcpp.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 使用备忘</title>
    <link href="https://bsdcpp.github.io/2020/09/20/Hexo-%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98/"/>
    <id>https://bsdcpp.github.io/2020/09/20/Hexo-%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98/</id>
    <published>2020-09-20T15:29:53.000Z</published>
    <updated>2020-09-25T14:05:19.681Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>具体可以看：<a href="https://hexo.io/zh-cn/docs/">https://hexo.io/zh-cn/docs/</a></p><ul><li><p>安装node.js和npm</p></li><li><p>利用npm安装hexo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure></li><li><p>创建博客目录，以blog目录为例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure><a id="more"></a></li><li><p>安装插件（包括上传github的，主题等等）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#cd blog</span></span><br><span class="line">绘图类：<span class="comment">#npm install hexo-filter-mermaid-diagrams</span></span><br><span class="line">主题：<span class="comment">#git clone https://github.com/theme-next/hexo-theme-next themes/next</span></span><br><span class="line">上传github插件：<span class="comment">#npm install hexo-deployer-git</span></span><br></pre></td></tr></table></figure></li><li><p>配置主题支持mermaid绘图插件<br>编辑next/_config.yml</p>  <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Mermaid tag</span></span><br><span class="line"><span class="attr">mermaid:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Available themes: default | dark | forest | neutral</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">forest</span></span><br></pre></td></tr></table></figure></li><li><p>用法<br>靠标记符载入mermaid.js</p>  <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">%</span> <span class="string">mermaid</span> <span class="string">type</span> <span class="string">%</span>&#125;</span><br><span class="line">&#123;<span class="string">%</span> <span class="string">endmermaid</span> <span class="string">%</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="attr">type :</span> <span class="string">type</span> <span class="string">of</span> <span class="string">the</span> <span class="string">mermaid</span> <span class="string">chart,</span> <span class="string">visit</span> <span class="string">https://github.com/mermaid-js/mermaid</span> <span class="string">for</span> <span class="string">more</span> <span class="string">information.</span></span><br></pre></td></tr></table></figure><p>例子：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% mermaid graph TD %&#125;</span><br><span class="line">A[Hard] --&gt;|Text| B(Round)</span><br><span class="line">B --&gt; C&#123;Decision&#125;</span><br><span class="line">C --&gt;|One| D[Result 1]</span><br><span class="line">C --&gt;|Two| E[Result 2]</span><br><span class="line">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure><p><strong><em>mermaid详细教程</em></strong>： <a href="http://mermaid-js.github.io/mermaid/diagrams-and-syntax-and-examples/examples.html">http://mermaid-js.github.io/mermaid/diagrams-and-syntax-and-examples/examples.html</a></p><p><strong><em>typora图表介绍</em></strong>：<a href="https://support.typora.io/Draw-Diagrams-With-Markdown/">https://support.typora.io/Draw-Diagrams-With-Markdown/</a></p></li></ul><ul><li><p>各种命令</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">生成新博文：hexo n <span class="string">&quot;博文标题&quot;</span></span><br><span class="line">生成静态页面：hexo g</span><br><span class="line">开启本地服务：hexo s --debug</span><br><span class="line">上传github：hexo d</span><br></pre></td></tr></table></figure></li></ul><h3 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h3><ul><li><p>仓库地址：<a href="https://github.com/next-theme/hexo-theme-next">https://github.com/next-theme/hexo-theme-next</a></p></li><li><p>教程地址：<a href="https://theme-next.js.org/docs/getting-started/">https://theme-next.js.org/docs/getting-started/</a></p></li></ul><h3 id="Hexo-添加分类及标签"><a href="#Hexo-添加分类及标签" class="headerlink" title="Hexo 添加分类及标签"></a>Hexo 添加分类及标签</h3><ul><li><p>创建“分类”选项<br>生成“分类”页并添加tpye属性,进入博客目录。执行命令下方命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page categories</span><br></pre></td></tr></table></figure><p>添加type: “categories”到内容中，添加后是这样的：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">分类</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2019-04-24 15:30:30</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">categories</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>给文章添加“categories”属性</p><p>打开需要添加分类的文章，为其添加categories属性。下方的categories:Hexo表示这篇文章添加到到“Hexo”这个分类。注意：一篇文章只会添加到一个分类中，如果是多个默认放到第一个分类中。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hexo</span> <span class="string">添加分类及标签</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2017-05-26 12:12:57</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">Hexo</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure></li><li><p>创建“标签”选项<br>生成“标签”页并添加tpye属性 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page tags</span><br></pre></td></tr></table></figure><p>添加type: “tags”到内容中，添加后是这样的：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">标签</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2019-04-24 15:40:24</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">tags</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>给文章添加“tags”属性,打开需要添加标签的文章，为其添加tags属性。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hexo</span> <span class="string">添加分类及标签</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2019-04-24 15:40:24</span></span><br><span class="line"><span class="attr">categories:</span> </span><br><span class="line">           <span class="bullet">-</span> <span class="string">Hexo</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line">           <span class="bullet">-</span> <span class="string">博客</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="添加-RSS-订阅功能"><a href="#添加-RSS-订阅功能" class="headerlink" title="添加 RSS 订阅功能"></a>添加 RSS 订阅功能</h3><ul><li>安装插件：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-feed</span><br></pre></td></tr></table></figure></li><li>修改hexo的_config.yml，新增如下：<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Feed Atom</span></span><br><span class="line"><span class="attr">feed:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">atom.xml</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">20</span></span><br></pre></td></tr></table></figure></li><li>修改主题_config.yml的Rss相关配置，打开开关即可。</li></ul><h3 id="关于typora插入图片后hexo生成路径问题"><a href="#关于typora插入图片后hexo生成路径问题" class="headerlink" title="关于typora插入图片后hexo生成路径问题"></a>关于typora插入图片后hexo生成路径问题</h3><ul><li>安装插件 hexo-image-link<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-image-link --save</span><br></pre></td></tr></table></figure></li><li>修改hexo的_config.yml<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="其他：插入视频"><a href="#其他：插入视频" class="headerlink" title="其他：插入视频"></a>其他：插入视频</h3><p> 具体参考：<a href="https://hexo.io/docs/tag-plugins">https://hexo.io/docs/tag-plugins</a></p><ul><li>youtube<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% youtube video<span class="emphasis">_id [type] [cookie] %&#125;</span></span><br></pre></td></tr></table></figure>例如:<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% youtube lJIrF4YjHfQ %&#125;</span><br><span class="line">也可以插入播放列表</span><br><span class="line">&#123;% youtube PL9hW1uS6HUfscJ9DHkOSoOX45MjXduUxo &#x27;playlist&#x27; %&#125;</span><br></pre></td></tr></table></figure>例子见：<a href="#">Post not found: hello-world</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h3&gt;&lt;p&gt;具体可以看：&lt;a href=&quot;https://hexo.io/zh-cn/docs/&quot;&gt;https://hexo.io/zh-cn/docs/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;安装node.js和npm&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;利用npm安装hexo&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install -g hexo-cli&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;创建博客目录，以blog目录为例&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo init blog&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Hexo" scheme="https://bsdcpp.github.io/categories/Hexo/"/>
    
    
    <category term="Hexo" scheme="https://bsdcpp.github.io/tags/Hexo/"/>
    
    <category term="Next" scheme="https://bsdcpp.github.io/tags/Next/"/>
    
  </entry>
  
  <entry>
    <title>关于阅读（转载）</title>
    <link href="https://bsdcpp.github.io/2020/09/20/%E5%85%B3%E4%BA%8E%E9%98%85%E8%AF%BB/"/>
    <id>https://bsdcpp.github.io/2020/09/20/%E5%85%B3%E4%BA%8E%E9%98%85%E8%AF%BB/</id>
    <published>2020-09-20T13:42:45.000Z</published>
    <updated>2020-09-24T03:16:45.692Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://mp.weixin.qq.com/s?__biz=MzI4NjMwNzU4OA==&mid=2247493372&idx=1&sn=9791b764cf4c9a2608716a39fe6cae68&chksm=ebdc4297dcabcb819219025e587a8ecf69efd61acb4e67e28a2b021e37bfe1fc7168655f052f&mpshare=1&scene=23&srcid=0919C6pT7zv6c0mEKhIbNvqq&sharer_sharetime=1600523057480&sharer_shareid=2493c0d635f685369899b4f3b0d7aac5%23rd">原文链接</a></p><h2 id="反复默写VS大量阅读"><a href="#反复默写VS大量阅读" class="headerlink" title="反复默写VS大量阅读"></a>反复默写VS大量阅读</h2><p>原创 高子阳 第一语文 <em>前天</em></p><p>为什么要默写？</p><p>是为了考试，为了高分，为了记住，还是为了素养？</p><p>对于一个班学生来说，为什么第一遍默写总是那几个同学全对，或者只有一点点小问题？为什么绝大多数同学要反反复复默写，还是难以全对？那些词，那些古诗文，那些段落到底怎么了？</p><a id="more"></a><p>研究默写，必须研究学生，研究学生的差异。其实，这一研究不难。那些第一遍默写就能全对或者只有一点点小问题的同学，早已经行走在“多读多写”的大道上了。也就是说，一个早已经爱上读写的学生，是不需要反反复复默写的。而研究那些反反复复还对不了的同学，几乎都不爱读爱写。</p><p>不得不说，反反复复地默写、订正，太伤害人了。多少学生，因为这种重复而讨厌语文。而这种默写得来的高分（仅仅限于小学），并不能确定是语文学习高手。看中高考语文成绩，这些年全国各地又有多少地方平均及格过？如此大量默写为何得不到应有的合格？</p><p>这其实就是我国多年中小学语文学习存在的问题——全国中小学生整体读书量太少，写作能力整体不行。</p><p>我在多次讲座中讲一张图、一组数据。</p><p>这张图是：</p><img src="/2020/09/20/%E5%85%B3%E4%BA%8E%E9%98%85%E8%AF%BB/640-20200920214423649.jpeg" class="" title="img"><p>每天小于一分钟读书，一年读8000个词；每天读4.6分钟，一年365天，认识词汇量达了282000个；每天读20分钟，其一年阅读量居然达到180万词。我国九年义务教育400万字的阅读量，也就是一天读4.8分钟。看这张图，把班级学生分为三类，哪类学生默写能做到一次全对，其实是非常明确的。我国绝大多数中小学生因为读书量不大，只在4.8分钟，所以想一次性默写好那是挺难的。</p><p>再来看看第二张表：</p><img src="/2020/09/20/%E5%85%B3%E4%BA%8E%E9%98%85%E8%AF%BB/640-20200920214423663.jpeg" class="" title="img"><p>看看这张表，考50分的同学，每天读书4.6分钟，一年阅读词数是282000；考60分的同学，每天读书6.5分钟，一年阅读词数是432000；考90分的同学，每天读书21.1分钟，一年阅读词数1823000；考98分的同学，每天读书65分钟，一年阅读词数4358000。我国九年阅读量400万字，也就是处在每天读书4.6-6.5分之间，我国中高考多年语文整体平均分达不到及格，从这张表中可以找到原因。</p><p>大量默写能增加词汇量吗？每个学期，重来重去默写的那些词，就是二三百个字，一年也就五六百字，加上背诵课文的，一年很难超过1000个。这样的默写，怎么可能换来中高考的高分？如果说有效果，仅限于小学。因为小学的试卷是以考课本为主。有人会说，小学是基础，如果小学都不重视默写，中学语文质量会更差。持这种观点的人，肯定是懂教育教学规律的人，也不值得与这类人争辩。其实0-12岁的教育，大量阅读更为重要。</p><p>2012年，美国开始实施的全国性的教育大纲《各州共同核心标准》，该标准规定美国小学毕业生至少需要阅读1404本课外读物，阅读量占到全部K12年级阅读量的77.6%；美国《加州公立学校阅读/语言艺术大纲（K12）》规定小学一二年级用在阅读的时间是每天150分钟（在校）+（在家30或45分钟），这是全美最高标准。</p><p>我们现在所用的统编本教材，快乐读书吧六年才44本书！走进我们的中小学，看看课表上，有阅读课程吗？没有！看看课程表，4.8分钟的阅读都没有列在课程表上！这44本书，还有很多很多学生没有读的！</p><p>面对着默写，我们的思考视角该转变了。我们的语文教育教学如果能重视大量阅读，每天让孩子读1个小时书，那种死记硬背式的默写当然可以取消。取消了，语文成绩不仅不会降低，反而会大面积的提高。</p><p>当下，谁又会相信这一理论呢？因为佐藤学说：“他三十几年来，每周至少两天深入学校，扎根中小学实地观察。目前，他已到过全国3500多所学校，听了1万多节课。在学校改革中他遭遇许许多多次失败，从而认识到学校改革必须要从内而外进行改革，才能获得教育行政、政府、家长等的认可。因为家长是顽固，教师是顽固，学生是顽固的，校长更是顽固，教育主管部门就不要说了。一切都充满挑战！”这段话适合我们吗？有待研究。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzI4NjMwNzU4OA==&amp;mid=2247493372&amp;idx=1&amp;sn=9791b764cf4c9a2608716a39fe6cae68&amp;chksm=ebdc4297dcabcb819219025e587a8ecf69efd61acb4e67e28a2b021e37bfe1fc7168655f052f&amp;mpshare=1&amp;scene=23&amp;srcid=0919C6pT7zv6c0mEKhIbNvqq&amp;sharer_sharetime=1600523057480&amp;sharer_shareid=2493c0d635f685369899b4f3b0d7aac5%23rd&quot;&gt;原文链接&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;反复默写VS大量阅读&quot;&gt;&lt;a href=&quot;#反复默写VS大量阅读&quot; class=&quot;headerlink&quot; title=&quot;反复默写VS大量阅读&quot;&gt;&lt;/a&gt;反复默写VS大量阅读&lt;/h2&gt;&lt;p&gt;原创 高子阳 第一语文 &lt;em&gt;前天&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;为什么要默写？&lt;/p&gt;
&lt;p&gt;是为了考试，为了高分，为了记住，还是为了素养？&lt;/p&gt;
&lt;p&gt;对于一个班学生来说，为什么第一遍默写总是那几个同学全对，或者只有一点点小问题？为什么绝大多数同学要反反复复默写，还是难以全对？那些词，那些古诗文，那些段落到底怎么了？&lt;/p&gt;</summary>
    
    
    
    
    <category term="阅读" scheme="https://bsdcpp.github.io/tags/%E9%98%85%E8%AF%BB/"/>
    
  </entry>
  
  <entry>
    <title>MacOS使用记录</title>
    <link href="https://bsdcpp.github.io/2020/08/30/MacOS%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"/>
    <id>https://bsdcpp.github.io/2020/08/30/MacOS%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</id>
    <published>2020-08-30T07:54:05.443Z</published>
    <updated>2021-03-16T01:42:39.621Z</updated>
    
    <content type="html"><![CDATA[<h3 id="控制发热"><a href="#控制发热" class="headerlink" title="控制发热"></a>控制发热</h3><h4 id="双显卡策略"><a href="#双显卡策略" class="headerlink" title="双显卡策略"></a>双显卡策略</h4><ul><li>强制电池电源时使用核显(集成显卡)<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pmset -b GPUSwitch 0</span><br></pre></td></tr></table></figure></li><li>在插电时根据应用需求调用独立显卡<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pmset -c GPUSwitch 2</span><br></pre></td></tr></table></figure></li></ul><a id="more"></a><h4 id="禁止睿频"><a href="#禁止睿频" class="headerlink" title="禁止睿频"></a>禁止睿频</h4><ul><li>安装turbo boost，创建一个脚本runtbs，内容：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /Applications/Turbo\ Boost\ Switcher.app/Contents/MacOS/Turbo\ Boost\ Switcher</span><br></pre></td></tr></table></figure></li><li>然后赋予suid权限（即让普通用户可以启动）：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod 4711 runtbs</span><br></pre></td></tr></table></figure></li><li>监控命令：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo powermetrics</span><br></pre></td></tr></table></figure></li></ul><h3 id="MUMU安卓模拟器连接问题"><a href="#MUMU安卓模拟器连接问题" class="headerlink" title="MUMU安卓模拟器连接问题"></a>MUMU安卓模拟器连接问题</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">1.连接模拟器终端</span><br><span class="line">windows和mac不一样:</span><br><span class="line">【win版】</span><br><span class="line">adb connect 127.0.0.1:7555</span><br><span class="line">adb shell</span><br><span class="line">【mac版】</span><br><span class="line">adb kill-server &amp;&amp; adb server &amp;&amp; adb shell</span><br><span class="line"></span><br><span class="line">3.frida脱壳</span><br><span class="line">  a.到模拟器执行frida-server (https://github.com/frida/frida/releases)</span><br><span class="line">    传输server文件到模拟器：adb -s emulator-5554 push frida-server-12.11.14-android-x86 /data/</span><br><span class="line">  b.https://github.com/hluwa/FRIDA-DEXDump</span><br><span class="line">    安装：pip3 install frida-dexdump</span><br><span class="line">    执行：先在模拟器里运行需要脱壳的app，然后在主机执行frida-dexdump</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="PD虚拟机"><a href="#PD虚拟机" class="headerlink" title="PD虚拟机"></a>PD虚拟机</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">首先安装新版本 16.0.1(48919)，https://www.inpandora.com/parallels-desktop-13-3.html</span><br><span class="line">然后终端执行：sudo -b /Applications/Parallels\ Desktop.app/Contents/MacOS/prl_client_app</span><br></pre></td></tr></table></figure><h3 id="2k显示屏开启HIDPI"><a href="#2k显示屏开启HIDPI" class="headerlink" title="2k显示屏开启HIDPI"></a>2k显示屏开启HIDPI</h3><ul><li><p>关闭SIP</p><p>开机前按住command+r，直到logo出现松手，用终端输入csrutil disable，然后重启（可以用csrutil status检查一下</p></li></ul><p>使用一键脚本：<a href="https://github.com/xzhih/one-key-hidpi">https://github.com/xzhih/one-key-hidpi</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ ioreg -l | grep <span class="string">&quot;DisplayVendorID&quot;</span></span><br><span class="line">  ioreg -l | grep <span class="string">&quot;DisplayProductID&quot;</span></span><br><span class="line">    | |   |           | | |         <span class="string">&quot;DisplayVendorID&quot;</span> = 1552   (macbook)</span><br><span class="line">    | |   |           | | | |       <span class="string">&quot;DisplayVendorID&quot;</span> = 4268     </span><br><span class="line">    | |   |           | | |         <span class="string">&quot;DisplayProductID&quot;</span> = 41028 (macbook)</span><br><span class="line">    | |   |           | | | |       <span class="string">&quot;DisplayProductID&quot;</span> = 53362</span><br></pre></td></tr></table></figure><h3 id="其他使用技巧"><a href="#其他使用技巧" class="headerlink" title="其他使用技巧"></a>其他使用技巧</h3><h4 id="输入法技巧"><a href="#输入法技巧" class="headerlink" title="输入法技巧"></a>输入法技巧</h4><p>详见官网：<a href="https://support.apple.com/zh-cn/guide/chinese-input-method/welcome/mac">https://support.apple.com/zh-cn/guide/chinese-input-method/welcome/mac</a></p><ul><li><p>切换输入法：control + 空格</p></li><li><p>翻页选词：可以不使用上下箭头，用[和]分别代替上翻和下翻；</p></li><li><p>拆字：比如要输入“淼”，可以先输入三个水：“水水水”，然后按shift+space即可调出拆字；</p></li><li><p>中英文、数字一次性混合输入：按住shift输入大写字母，按住option输入数字，练习这段文字：“C区7栋10楼D号房”；</p></li><li><p>输入声调：</p><ul><li>在英文输入法状态下，<strong>长按字母</strong>，会显示带拼音的字母选项，可以试试；</li><li>要在输入法设置里启用英文的“ABC扩展”，然后切换至该输入法，输入方法是option + aev<del>，后者a、e、v、</del>分别表示四声。输入的时候先输入声调，然后键入字母。练习：wǒ shì yí gè zhōng guó rén。</li></ul></li><li><p>拼音间隔：在元音之间加引号；</p></li><li><p>emoji：command + control + 空格。😂🤣🦊🚚🛵📷6️⃣🇮🇲👨‍👩‍👦☞➥</p></li><li><p>查找输入码<br>「查找输入码」功能简直就是一个学习拼音、五笔型、笔画的小帮手。你随便输入一组汉字，能看到每个字对应的拼音、五笔型、笔画以及拆字规则。点击输入法图标，选择「查找输入码」，或按「Option+Shift+L」即可打开输入码搜索框。</p></li><li><p>在 App 中，使用前缀键 (u)，键入字符（前面无需空格）的笔画输入码。例如，您可以键入以下内容：</p></li></ul><table><thead><tr><th align="left">拼音中的笔画</th><th align="left">键盘按键</th></tr></thead><tbody><tr><td align="left">一</td><td align="left">H</td></tr><tr><td align="left">丨</td><td align="left">S</td></tr><tr><td align="left">丿</td><td align="left">P</td></tr><tr><td align="left">丶(乀)</td><td align="left">N</td></tr><tr><td align="left">乛(乙)</td><td align="left">Z</td></tr><tr><td align="left">*通配符</td><td align="left">X</td></tr></tbody></table><p>  如果键入“unnzzsh”，则“字”会作为第一个候选字。</p><h4 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h4><ul><li>在程序间切换：command + tab，如果此时释放tab按住Q可以退出相应选中程序；</li><li>在本程序多窗口间切换：command + ~；</li><li>强制退出进程：command + option + esc；</li></ul>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;控制发热&quot;&gt;&lt;a href=&quot;#控制发热&quot; class=&quot;headerlink&quot; title=&quot;控制发热&quot;&gt;&lt;/a&gt;控制发热&lt;/h3&gt;&lt;h4 id=&quot;双显卡策略&quot;&gt;&lt;a href=&quot;#双显卡策略&quot; class=&quot;headerlink&quot; title=&quot;双显卡策略&quot;&gt;&lt;/a&gt;双显卡策略&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;强制电池电源时使用核显(集成显卡)&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo pmset -b GPUSwitch 0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;在插电时根据应用需求调用独立显卡&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo pmset -c GPUSwitch 2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;


&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Mac" scheme="https://bsdcpp.github.io/categories/Mac/"/>
    
    
    <category term="Mac" scheme="https://bsdcpp.github.io/tags/Mac/"/>
    
    <category term="MacOS" scheme="https://bsdcpp.github.io/tags/MacOS/"/>
    
  </entry>
  
</feed>
